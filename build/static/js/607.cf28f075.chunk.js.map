{"version":3,"file":"static/js/607.cf28f075.chunk.js","mappings":"gQAIA,SAASA,EAAkBC,EAAQC,EAAWC,GAC1C,IAC4BC,EADtBC,EAAWH,EAAUC,QACVG,IAAbD,IACAJ,EAAOE,IAAmB,QAAZC,EAACH,EAAOE,UAAI,IAAAC,EAAAA,EAFkB,GAEEC,EAEtD,CACA,SAASE,EAASC,EAAQC,GAA0B,IAAnBC,EAASC,UAAAC,OAAA,QAAAN,IAAAK,UAAA,IAAAA,UAAA,GACtC,GAAKF,EAAL,CAIA,GADgBD,EAChB,CAGA,IAAMK,EAJUL,EAIaC,MAC7B,GAAKI,EAGL,IAAK,IAAMV,KAAOM,EAAO,CACrB,IAAMK,EAAQL,EAAMN,GACfW,GAGLD,EAAaE,YAAYZ,EAAKW,EAAOJ,EAAY,YAAc,GACnE,CAXA,CAJA,CAgBJ,CACO,IAAMM,EAAM,WACf,SAAAA,EAAYC,GAAW,IAAAC,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAAH,GACnBI,KAAKH,UAAYA,EACjBG,KAAKC,uBAAyB,SAACC,GAAa,IACIC,EADJC,GAAAC,EAAAA,EAAAA,GAClBP,EAAKQ,mBAAiB,IAA5C,IAAAF,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAA8C,KAAAC,EAAnCC,EAAOR,EAAAT,MACG,QAAjBgB,EAAAC,EAAQC,iBAAS,IAAAF,GAAjBA,EAAAG,KAAAF,EAAoBT,EACxB,CAAC,OAAAY,GAAAV,EAAAW,EAAAD,EAAA,SAAAV,EAAAY,GAAA,CACL,EACAhB,KAAKiB,sBAAwB,SAACC,EAAKhB,EAAUiB,EAAQC,EAAUC,EAAaC,GAAc,IAC3CC,EAD2CC,GAAAnB,EAAAA,EAAAA,GAChEP,EAAK2B,kBAAgB,IAA3C,IAAAD,EAAAjB,MAAAgB,EAAAC,EAAAhB,KAAAC,MAA6C,KAAAiB,EAAlCf,EAAOY,EAAA7B,MACd,GAAIiB,EAAQgB,eAAgB,CACxB,IAAAC,EAAyBjB,EAAQgB,eAAezB,EAAUgB,EAAKC,EAAQC,GAA/DS,EAAID,EAAJC,KAAMC,EAAMF,EAANE,OACVD,IACAR,EAAYQ,KAAOA,GAEnBC,IACAT,EAAYS,OAASA,EAE7B,CACA,GAAInB,EAAQoB,mBAAoB,CAC5B,IAAMC,EAAmBrB,EAAQoB,mBAAmB7B,GACpD,IAAK,IAAMnB,KAAOiD,EACdpD,EAAkB0C,EAAWU,EAAkBjD,EAEvD,CACkB,QAAlB2C,EAAAf,EAAQsB,kBAAU,IAAAP,GAAlBA,EAAAb,KAAAF,EAAqBT,EACzB,CAAC,OAAAY,GAAAU,EAAAT,EAAAD,EAAA,SAAAU,EAAAR,GAAA,CACL,EACAhB,KAAKkC,oBAAsB,WAAM,IACWC,EADXC,GAAA/B,EAAAA,EAAAA,GACRP,EAAKuC,gBAAc,IAAxC,IAAAD,EAAA7B,MAAA4B,EAAAC,EAAA5B,KAAAC,MAA0C,KAAA6B,EAA/BC,EAAMJ,EAAAzC,MACA,QAAb4C,EAAAC,EAAOC,cAAM,IAAAF,GAAbA,EAAAzB,KAAA0B,EACJ,CAAC,OAAAzB,GAAAsB,EAAArB,EAAAD,EAAA,SAAAsB,EAAApB,GAAA,CACL,EACAhB,KAAKyC,yBAA2B,SAACvC,GAC7B,IAAIwC,EAAQC,EAC2BC,EADpBC,GAAAxC,EAAAA,EAAAA,GACEP,EAAKgD,eAAa,IAAvC,IAAAD,EAAAtC,MAAAqC,EAAAC,EAAArC,KAAAC,MAAyC,KAA9B8B,EAAMK,EAAAlD,MAOb,IANKgD,GAAUH,EAAOQ,oBAClBL,GAASM,EAAAA,EAAAA,IAAgBT,EAAOQ,kBAAkB7C,MAEjDyC,GAAUJ,EAAOU,sBAClBN,GAASK,EAAAA,EAAAA,IAAgBT,EAAOU,oBAAoB/C,KAEpDwC,GAAUC,EACV,KAER,CAAC,OAAA7B,GAAA+B,EAAA9B,EAAAD,EAAA,SAAA+B,EAAA7B,GAAA,CACD,MAAO,CAAC0B,EAAQC,EACpB,EACA3C,KAAKkD,YAAUC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACyF,GAAjGR,EAAUzD,EAAKD,UAAUmE,cAAeR,EAAQD,EAAQU,eAAeT,QAAOC,EAAQD,EAAMC,OACvF,CAAFI,EAAAE,KAAA,SACCL,GAAWQ,EAAAA,EAAAA,IAAgBT,MAEvBE,GAAUQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTT,GAAQ,IACXU,EAAGZ,EAAMa,UAEbvE,EAAKwE,kBAAmBC,EAAAA,EAAAA,IAAgBZ,EAAYA,EAAWS,IAClEP,EAAAE,KAAA,sBAAAF,EAAAE,KAAA,EAGK,IAAIS,SAAQ,SAACC,EAASC,GACxB,GAAKlB,EAAMmB,MAAX,CAGA,IAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIG,iBAAiB,QAAQ,WACzBjF,EAAKkF,YAAc,CACfL,MAAOC,EACPP,QAASb,EAAMa,SAEnBI,GACJ,IACAG,EAAIG,iBAAiB,SAAS,SAACE,GAC3BP,EAAOO,EAAIC,MACf,IACAN,EAAIO,IAAM3B,EAAMmB,KAZhB,CAaJ,IAAE,wBAAAd,EAAAuB,OAAA,GAAA9B,EAAA,KAGVtD,KAAKqF,WAAa,WACd,IAAMC,EAAUxF,EAAKwF,QAAS/B,EAAUzD,EAAKD,UAAUmE,cACvD,GAAKsB,EAUL,IAAK,IAAMvG,KAPPe,EAAKyF,aACLzF,EAAK0F,gBAAiBC,EAAAA,EAAAA,IAAW,CAAC,EAAGH,EAAQjG,OAC7CS,EAAK4F,uBAGL5F,EAAK6F,sBAESpC,EAAQlE,MACtB,GAAKN,GAAQwE,EAAQlE,MAArB,CAGA,IAAMK,EAAQ6D,EAAQlE,MAAMN,GACvBW,GAGL4F,EAAQjG,MAAMM,YAAYZ,EAAKW,EAAO,YALtC,CAOR,EACAM,KAAK4F,YAAUzC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAwC,IAAA,IAAAtC,EAAAuC,EAAAC,EAAA1B,EAAA2B,EAAA,OAAA5C,EAAAA,EAAAA,KAAAQ,MAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,OAC4F,GAApGR,EAAUzD,EAAKD,UAAUmE,cAAe8B,EAAQvC,EAAQ2C,UAAUC,KAAKL,MAAOC,EAAYD,EAAMjE,KACjGiE,EAAMM,OAAQ,CAAFH,EAAAlC,KAAA,eAAAkC,EAAAI,OAAA,iBAGkD,GAA3C,EAAGhC,EAAH,EAA+ByB,EAAMtG,QACzDuG,EAAUtC,MAAO,CAAFwC,EAAAlC,KAAA,SACmC,GAA5CiC,GAAY9B,EAAAA,EAAAA,IAAgB6B,EAAUtC,OAC5B,CAAFwC,EAAAlC,KAAA,eAAAkC,EAAAI,OAAA,iBAGdvG,EAAKwG,WAAa,CACd7C,OAAKU,EAAAA,EAAAA,GAAA,GACE6B,GAEP3B,QAAAA,GACF4B,EAAAlC,KAAA,wBAAAkC,EAAAlC,KAAA,GAGI,IAAIS,SAAQ,SAACC,EAASC,GACxB,GAAKqB,EAAUpB,MAAf,CAGA,IAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIG,iBAAiB,QAAQ,WACzBjF,EAAKwG,WAAa,CACd3B,MAAOC,EACPP,QAAAA,GAEJI,GACJ,IACAG,EAAIG,iBAAiB,SAAS,SAACE,GAC3BP,EAAOO,EAAIC,MACf,IACAN,EAAIO,IAAMY,EAAUpB,KAZpB,CAaJ,IAAE,yBAAAsB,EAAAb,OAAA,GAAAS,EAAA,KAGV7F,KAAKuG,WAAa,SAACC,GACf1G,EAAK2G,MAAK,SAACvF,GAAG,OAAKwF,EAAAA,EAAAA,IAAUxF,EAAKpB,EAAK6G,KAAMH,EAAU,GAC3D,EACAxG,KAAK4G,YAAc,SAACjC,EAAON,GACvBvE,EAAK2G,MAAK,SAACvF,GAAG,OAAK2F,EAAAA,EAAAA,IAAW3F,EAAKpB,EAAK6G,KAAMhC,EAAON,EAAQ,GACjE,EACArE,KAAK8G,aAAe,WAChB,IAAMxB,EAAUxF,EAAKwF,QAChBA,IAGLxF,EAAKiH,uBAAsB,SAACC,GAAQ,OAAKA,EAASC,YAAY,IAC9DnH,EAAKuF,aACLvF,EAAKoH,iBACLpH,EAAKiH,uBAAsB,SAACC,GAAQ,OAAKA,EAASG,QAAQ7B,EAAS,CAAE8B,YAAY,GAAO,IAC5F,EACApH,KAAK2F,oBAAsB,WACvB,IAAML,EAAUxF,EAAKwF,QAAS+B,EAAgBvH,EAAK0F,eAC7CF,GAAW+B,GAGjBlI,EAASmG,EAAS+B,EACtB,EACArH,KAAK+G,sBAAwB,SAACO,GACrBxH,EAAKyH,mBAGVD,EAASxH,EAAKyH,kBAClB,EACAvH,KAAK0F,oBAAsB,WACvB,IAAMJ,EAAUxF,EAAKwF,QACrB,GAAKA,EAAL,CAIAnG,EAASmG,EAAS,CACdkC,SAAU,QACVC,OAAQ3H,EAAKD,UAAUmE,cAAc0D,WAAWD,OAAOE,SAH7C,IAIVC,IAAK,IACLC,KAAM,IACNC,MAAO,OACPC,OAAQ,SACT,EATH,CAUJ,EACA/H,KAAK2G,KAAO,CACRoB,OAAQ,EACRD,MAAO,GAEX9H,KAAK6D,SAAW,KAChB7D,KAAKgI,YAAa,EAClBhI,KAAKyB,iBAAmB,GACxBzB,KAAKM,kBAAoB,GACzBN,KAAKqC,eAAiB,GACtBrC,KAAK8C,cAAgB,EACzB,CA8PC,OA9PAmF,EAAAA,EAAAA,GAAArI,EAAA,EAAAb,IAAA,cAAAmJ,IACD,WACI,OAAOlI,KAAKH,UAAUmE,cAAc0D,WAAWtB,MACnD,GAAC,CAAArH,IAAA,QAAAW,MACD,WAAQ,IAAAyI,EAAA,KACE5E,EAAUvD,KAAKH,UAAUmE,cAAe8B,EAAQvC,EAAQ2C,UAAUC,KAAKL,MAAOC,EAAY/F,KAAKsG,WACjG/C,EAAQU,eAAemC,OACvBpG,KAAKoI,QAEAtC,EAAMM,QAAUN,EAAMtG,OAJkG,GAIxEuG,EACjDA,EAAUtC,MACVzD,KAAKuG,YAAWhC,EAAAA,EAAAA,IAAgBwB,EAAUtC,MAAOsC,EAAU1B,UAEtD0B,EAAUpB,OACf3E,KAAK4G,YAAYb,EAAUpB,MAAOoB,EAAU1B,SAG3Cd,EAAQ8E,OACbrI,KAAKyG,MAAK,SAACvF,IACPmH,EAAAA,EAAAA,IAAMnH,EAAKiH,EAAKxB,KACpB,GAER,GAAC,CAAA5H,IAAA,UAAAW,MACD,WAEI,GADAM,KAAKoF,OACDpF,KAAKgI,WAAY,CACjB,IAAM1C,EAAUtF,KAAKsF,QACd,OAAPA,QAAO,IAAPA,GAAAA,EAASgD,QACb,MAEItI,KAAK2F,sBAET3F,KAAKyB,iBAAmB,GACxBzB,KAAKM,kBAAoB,GACzBN,KAAKqC,eAAiB,GACtBrC,KAAK8C,cAAgB,EACzB,GAAC,CAAA/D,IAAA,OAAAW,MACD,SAAK6I,GACD,IAAMrH,EAAMlB,KAAK6D,SACjB,GAAK3C,EAGL,OAAOqH,EAAGrH,EACd,GAAC,CAAAnC,IAAA,YAAAW,MACD,SAAU6I,GACN,IAAMrH,EAAMlB,KAAK6D,SACjB,GAAK3C,EAGL,OAAOqH,EAAGrH,EACd,GAAC,CAAAnC,IAAA,eAAAW,MACD,SAAaQ,EAAUsI,GAAO,IAAAC,EAAAC,EAAA,KAC1B,IAAIxI,EAASyI,WAAYzI,EAAS0I,UAAlC,CAGA,IAAMzH,EAASjB,EAAS2I,YACxB,KAAI1H,GAD+C,GACnD,CAGA,IAAM2H,EAAU5I,EAAS6I,eAAgBC,EAAmC,QAA5BP,EAAGvI,EAAS+I,wBAAgB,IAAAR,EAAAA,EAAIK,EAChFI,EAAuBlJ,KAAKyC,yBAAyBvC,GAASiJ,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAAzDxG,EAAMyG,EAAA,GAAExG,EAAMwG,EAAA,GACdzG,IACDA,EAASoG,GAERnG,IACDA,EAASqG,IAERtG,GAAWC,IAGhB3C,KAAKyG,MAAK,SAACvF,GAAQ,IAAAmI,EAAAC,EAAAC,EAAAC,EACT3J,EAAY6I,EAAK7I,UAAW0D,EAAU1D,EAAUmE,cAAeyF,EAAgBvJ,EAASqD,QAAQkE,OAAgCiC,EAAH,EAAuCxJ,EAASwJ,aAAcC,EAAcC,KAAAC,IAAGH,EAAgBD,EAAcK,aAAiCzF,EAA4D,QAArDgF,EAA0B,QAA1BC,EAAGpJ,EAAS6J,OAAO1F,eAAO,IAAAiF,EAAAA,EAAoB,QAApBC,EAAIrJ,EAASmE,eAAO,IAAAkF,OAAA,EAAhBA,EAAkB7J,aAAK,IAAA2J,EAAAA,EAA/D,EAAsIjI,EAAWiD,EAAUsF,EAAgBK,GAAlD,QAAzBR,EAAGtJ,EAAS+J,qBAAa,IAAAT,EAAAA,EAAInF,GAA+EsF,EAAgBrI,EAAY,CAAC,EAAGD,EAAc,CACpgBQ,KAAMa,GAASwH,EAAAA,EAAAA,IAAgBxH,EAAQtB,QAAYlC,GAEvDmC,EAAYS,OAASa,GAASuH,EAAAA,EAAAA,IAAgBvH,EAAQqH,GAAkB3I,EAAYQ,KACpF6G,EAAKzH,sBAAsBC,EAAKhB,EAAUiB,EAAQC,EAAUC,EAAaC,IACzE6I,EAAAA,EAAAA,IAAa,CACTtK,UAAAA,EACAuK,QAASlJ,EACThB,SAAAA,EACAsI,MAAAA,EACAnH,YAAAA,EACA4C,eAAgBV,EAAQU,eAAemC,OACvCiE,UAAW9G,EAAQU,eAAeoG,UAClClJ,OAAQA,EAAMyI,KAAAC,IAAGH,EAAgBD,EAAca,UAC/CjG,QAASjD,EACTmJ,OAAQrK,EAASqD,QAAQgH,OACzBjJ,UAAAA,IAEJoH,EAAKzI,uBAAuBC,EAChC,GAhCA,CAJA,CAqCJ,GAAC,CAAAnB,IAAA,qBAAAW,MACD,SAAmB6C,EAAQrC,EAAUsI,GACjCxI,KAAKyG,MAAK,SAACvF,GAAG,OAAKsJ,EAAAA,EAAAA,IAAmBtJ,EAAKqB,EAAQrC,EAAUsI,EAAM,GACvE,GAAC,CAAAzJ,IAAA,aAAAW,MACD,SAAW6C,EAAQiG,GACfxI,KAAKyG,MAAK,SAACvF,GAAG,OAAKuJ,EAAAA,EAAAA,IAAWvJ,EAAKqB,EAAQiG,EAAM,GACrD,GAAC,CAAAzJ,IAAA,OAAAW,MAAA,eAAAgL,GAAAvH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAsH,IAAA,IAAAC,EAAA,YAAAxH,EAAAA,EAAAA,KAAAQ,MAAA,SAAAiH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,OAUsB,OATlB/D,KAAK+G,uBAAsB,SAAC+D,GAAG,OAAKA,EAAI7D,YAAY,IACpDjH,KAAKuH,mBAAoBwD,EAAAA,EAAAA,KAAqB,SAACC,GAAY,IAC3BC,EAD2BC,GAAA7K,EAAAA,EAAAA,GAClC2K,GAAO,IAA5B,IAAAE,EAAA3K,MAAA0K,EAAAC,EAAA1K,KAAAC,MAA8B,KAAnB0K,EAAMF,EAAAvL,MACO,eAAhByL,EAAOC,MAAkD,UAAzBD,EAAOE,eACvCT,EAAK9D,cAEb,CAAC,OAAAhG,GAAAoK,EAAAnK,EAAAD,EAAA,SAAAoK,EAAAlK,GAAA,CACL,IACAhB,KAAKwC,SACLxC,KAAKqF,aAAawF,EAAA9G,KAAA,EACZ/D,KAAKkD,aAAY,cAAA2H,EAAA/G,KAAA,EAAA+G,EAAA9G,KAAA,EAEb/D,KAAK4F,aAAY,OAAAiF,EAAA9G,KAAA,iBAAA8G,EAAA/G,KAAA,GAAA+G,EAAAS,GAAAT,EAAA,UAGvBU,EAAAA,EAAAA,MAAYrG,MAAK2F,EAAAS,IAAI,QAEzBtL,KAAKkH,iBACLlH,KAAK+G,uBAAsB,SAAC+D,GACnBF,EAAKtF,SAGVwF,EAAI3D,QAAQyD,EAAKtF,QAAS,CAAE8B,YAAY,GAC5C,IACApH,KAAKwL,eACLxL,KAAKyL,cACLzL,KAAKoI,QAAQ,yBAAAyC,EAAAzF,OAAA,GAAAuF,EAAA,mBAChB,yBAAAD,EAAAgB,MAAA,KAAAnM,UAAA,EA7BA,IA6BA,CAAAR,IAAA,iBAAAW,MACD,WACI,IAA8CiM,EAA9B3L,KAAKH,UAAUmE,cAAoC2H,WAAYrG,EAAUtF,KAAKsF,QAC9F,GAAKA,EAAL,CAGA,IAAM7F,EAAe6F,EAAQjG,MAC7B,GAAKI,EAAL,CAGA,GAAIkM,EAAWlI,MAAO,CAClB,IAAMA,GAAQS,EAAAA,EAAAA,IAAgByH,EAAWlI,OACzChE,EAAamM,gBAAkBnI,GAAQc,EAAAA,EAAAA,IAAgBd,EAAOkI,EAAWtH,SAAW,EACxF,MAEI5E,EAAamM,gBAAkB,GAEnCnM,EAAaoM,gBAAkBF,EAAWhH,OAAS,GACnDlF,EAAaqM,mBAAqBH,EAAWnE,UAAY,GACzD/H,EAAasM,iBAAmBJ,EAAWK,QAAU,GACrDvM,EAAawM,eAAiBN,EAAWhF,MAAQ,EAXjD,CAJA,CAgBJ,GAAC,CAAA5H,IAAA,cAAAW,MACD,WACIM,KAAKqC,eAAiB,GAAG,IACsB6J,EADtBC,GAAA9L,EAAAA,EAAAA,GACAL,KAAKH,UAAUuM,SAAO,IAA/C,IAAAD,EAAA5L,MAAA2L,EAAAC,EAAA3L,KAAAC,MAAiD,KAAA4L,EAAnC9J,GAAmC6G,EAAAA,EAAAA,GAAA8C,EAAAxM,MAAA,GAA7B,GACZ6C,EAAOC,QACPxC,KAAKqC,eAAeiK,KAAK/J,IAED,QAA5B8J,EAAI9J,EAAOQ,yBAAiB,IAAAsJ,EAAAA,EAAI9J,EAAOU,sBACnCjD,KAAK8C,cAAcwJ,KAAK/J,EAEhC,CAAC,OAAAzB,GAAAqL,EAAApL,EAAAD,EAAA,SAAAqL,EAAAnL,GAAA,CACL,GAAC,CAAAjC,IAAA,eAAAW,MACD,WACIM,KAAKyB,iBAAmB,GACxBzB,KAAKM,kBAAoB,GAAG,IAC2BiM,EAD3BC,GAAAnM,EAAAA,EAAAA,GACNL,KAAKH,UAAUqG,UAAUuG,UAAQ,IAAvD,IAAAD,EAAAjM,MAAAgM,EAAAC,EAAAhM,KAAAC,MAAyD,KAAAiM,EAAAC,EAA9ChM,EAAO4L,EAAA7M,MACViB,EAAQC,WACRZ,KAAKM,kBAAkBgM,KAAK3L,IAEwB,QAAxD+L,EAA0B,QAA1BC,EAAIhM,EAAQgB,sBAAc,IAAAgL,EAAAA,EAAIhM,EAAQoB,0BAAkB,IAAA2K,EAAAA,EAAI/L,EAAQsB,aAChEjC,KAAKyB,iBAAiB6K,KAAK3L,EAEnC,CAAC,OAAAG,GAAA0L,EAAAzL,EAAAD,EAAA,SAAA0L,EAAAxL,GAAA,CACL,GAAC,CAAAjC,IAAA,aAAAW,MACD,SAAWN,GAAQ,IAAAwN,EAAA,KACX5M,KAAKgI,YAAchI,KAAKsF,SACxBtF,KAAKsF,QAAQgD,SAEjBtI,KAAKgI,WACD5I,EAAOyN,SAAWC,EAAAA,MAAsB1N,EAAOyN,QACF,SAAvCzN,EAAOyN,QAAQC,EAAAA,IACf9M,KAAKgI,WACfhI,KAAKsF,QAAUlG,EACfY,KAAKsF,QAAQyH,WAAa,OAC1B/M,KAAKwF,gBAAiBC,EAAAA,EAAAA,IAAW,CAAC,EAAGzF,KAAKsF,QAAQjG,OAClDW,KAAK2G,KAAKoB,OAAS3I,EAAO4N,aAC1BhN,KAAK2G,KAAKmB,MAAQ1I,EAAO6N,YACzBjN,KAAK6D,SAAW7D,KAAKsF,QAAQ4H,WAAW,MACxClN,KAAK+G,uBAAsB,SAAC+D,GACnB8B,EAAKtH,SAGVwF,EAAI3D,QAAQyF,EAAKtH,QAAS,CAAE8B,YAAY,GAC5C,IACApH,KAAKH,UAAUsN,OAAOC,OACtBpN,KAAKkH,gBACT,GAAC,CAAAnI,IAAA,QAAAW,MACD,WAAQ,IAAA2N,EAAA,KACE9J,EAAUvD,KAAKH,UAAUmE,cAC/BhE,KAAKyG,MAAK,SAACvF,GACHqC,EAAQU,eAAemC,QAAU7C,EAAQU,eAAeT,QACxD6E,EAAAA,EAAAA,IAAMnH,EAAKmM,EAAK1G,MACZ0G,EAAKrI,YACLqI,EAAKzG,YAAYyG,EAAKrI,YAAYL,MAAO0I,EAAKrI,YAAYX,SAErDgJ,EAAK/I,iBACV+I,EAAK9G,WAAW8G,EAAK/I,kBAGrB+I,EAAK9G,cAIT8G,EAAK9G,YAEb,GACJ,GAAC,CAAAxH,IAAA,SAAAW,MACD,WACI,IAAKM,KAAKsF,QACN,OAAO,EAEX,IAAMzF,EAAYG,KAAKH,UAAWyN,EAAUzN,EAAUsN,OAAOI,WAAY5G,EAAO9G,EAAUT,OAAOuH,KAAM6G,EAC5FxN,KAAKsF,QAAQ2H,YAAcK,EADiEE,EAE3FxN,KAAKsF,QAAQ0H,aAAeM,EAExC,GAAIE,IAAmB7G,EAAKoB,QACxByF,IAAkB7G,EAAKmB,OACvB0F,IAAmBxN,KAAKsF,QAAQyC,QAChCyF,IAAkBxN,KAAKsF,QAAQwC,MAC/B,OAAO,EAEX,IAAM2F,GAAOtJ,EAAAA,EAAAA,GAAA,GAAQwC,GASrB,OARA3G,KAAKsF,QAAQwC,MAAQnB,EAAKmB,MAAQ9H,KAAKsF,QAAQ2H,YAAcK,EAC7DtN,KAAKsF,QAAQyC,OAASpB,EAAKoB,OAAS/H,KAAKsF,QAAQ0H,aAAeM,EAC5DtN,KAAKH,UAAU6N,SACf7N,EAAUqG,UAAUyH,gBAAgB,CAChC7F,MAAOnB,EAAKmB,MAAQ2F,EAAQ3F,MAC5BC,OAAQpB,EAAKoB,OAAS0F,EAAQ1F,UAG/B,CACX,GAAC,CAAAhJ,IAAA,OAAAW,MACD,WAAO,IAAAkO,EAAA,KACH5N,KAAK+G,uBAAsB,SAAC+D,GAAG,OAAKA,EAAI7D,YAAY,IACpDjH,KAAKuH,uBAAoBrI,EACzBc,KAAKyG,MAAK,SAACvF,GAAG,OAAKmH,EAAAA,EAAAA,IAAMnH,EAAK0M,EAAKjH,KAAK,GAC5C,GAAC,CAAA5H,IAAA,eAAAW,MAAA,eAAAmO,GAAA1K,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAyK,IAAA,IAAAjO,EAAAkO,EAAA,OAAA3K,EAAAA,EAAAA,KAAAQ,MAAA,SAAAoK,GAAA,cAAAA,EAAAlK,KAAAkK,EAAAjK,MAAA,UACS/D,KAAKsF,SAAYtF,KAAKwC,SAAQ,CAAAwL,EAAAjK,KAAA,eAAAiK,EAAA3H,OAAA,iBAKR,GAFrBxG,EAAYG,KAAKH,UAAWkO,EAAelO,EAAUoO,sBAC3DpO,EAAUqG,UAAUgI,aACpBlO,KAAKkC,uBACD6L,EAAc,CAAFC,EAAAjK,KAAA,eAAAiK,EAAAjK,KAAA,EACNlE,EAAUsO,UAAS,wBAAAH,EAAA5I,OAAA,GAAA0I,EAAA,UAEhC,yBAAAD,EAAAnC,MAAA,KAAAnM,UAAA,EAXA,MAWAK,CAAA,CAjcc,G,UC1BnB,SAASwO,EAAe9I,EAAS+I,EAAOC,EAASC,EAAKhL,GAClD,GAAIgL,EAAK,CACL,IAAIC,EAAa,CAAEC,SAAS,IACxBC,EAAAA,EAAAA,IAAUnL,GACViL,EAAWG,QAAUpL,OAEJrE,IAAZqE,IACLiL,EAAajL,GAEjB+B,EAAQP,iBAAiBsJ,EAAOC,EAASE,EAC7C,KACK,CACD,IAAMI,EAAgBrL,EACtB+B,EAAQuJ,oBAAoBR,EAAOC,EAASM,EAChD,CACJ,CACO,IAAME,EAAc,WACvB,SAAAA,EAAYjP,GAAW,IAAAC,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAA+O,GACnB9O,KAAKH,UAAYA,EACjBG,KAAK+O,mBAAqB,SAAChO,GACvB,IAAMlB,EAAYC,EAAKD,UAAW0D,EAAU1D,EAAUmE,cACtD,GAAIlE,EAAKkP,SAAU,CACf,IAAMC,EAAqBpP,EAAUqP,cAAcC,MAAOC,EAAWH,EAAmBzH,SACxF,IAAK4H,EACD,OAEJH,EAAmBI,eAAalL,EAAAA,EAAAA,GAAA,GAAQiL,GACxCH,EAAmBK,WAAY,IAAIC,MAAOC,UAC1C,IAAMC,EAAUlM,EAAQ2L,cAAcQ,OAAOD,SAC7CE,EAAAA,EAAAA,IAA0BF,EAAQG,MAAM,SAACA,GAAI,OAAK9P,EAAKD,UAAUgQ,gBAAgBD,EAAK,GAC1F,CACA,GAAe,aAAX7O,EAAEqK,KAAqB,CAEvB0E,YAAW,kBAAMhQ,EAAKiQ,mBAAmB,GADtB,IAEvB,CACJ,EACA/P,KAAKgQ,mBAAqB,SAACjP,GACvB,IAAMkP,EAAalP,EAAGlB,EAAYC,EAAKD,UAAW0D,EAAU1D,EAAU0D,QAAS2M,EAAgB3M,EAAQ2M,cAAeC,EAAYF,EAAWG,QAAUF,EAAcG,KAAOH,EAAcI,MAAOC,EAAQhN,EAAQiN,OAAOC,MAAK,SAACF,GAAK,OAAKA,EAAMG,OAASP,CAAS,IAC5PI,GAASA,EAAMI,QAAQC,MAClB/Q,EAAUgR,UAAUV,EAEjC,EACAnQ,KAAK8Q,wBAA0B,WAC3B,IAAMjR,EAAYC,EAAKD,UAAW0D,EAAU1D,EAAUmE,cACtDlE,EAAKiQ,oBACAxM,EAAQwN,cAGTlM,UAAYA,SAASmM,QACrBnR,EAAUoR,YAAa,EACvBpR,EAAUqR,UAGVrR,EAAUoR,YAAa,EACnBpR,EAAUsR,gBACLtR,EAAUuR,MAAK,GAGfvR,EAAU4G,MAAK,IAGhC,EACAzG,KAAKqR,oBAAsB,WACnBvR,EAAKwR,iBACLC,aAAazR,EAAKwR,uBACXxR,EAAKwR,gBAEhB,IAAME,EAAY,eAAAC,GAAAtO,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAlE,EAAA,OAAAgE,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACmB,OAA9B3E,EAASU,EAAKD,UAAUT,OAAMyE,EAAAE,KAAA,EACxB,OAAN3E,QAAM,IAANA,OAAM,EAANA,EAAQsS,eAAc,wBAAA7N,EAAAuB,OAAA,GAAA9B,EAAA,KAC/B,kBAHiB,OAAAmO,EAAA/F,MAAA,KAAAnM,UAAA,KAIlBO,EAAKwR,eAAiBxB,YAAW,WAAW0B,GAAc,GAAE1R,EAAKD,UAAUmE,cAAckL,cAAcQ,OAAOlN,OAAOmP,MAAQC,EAAAA,GACjI,EACA5R,KAAK6R,8BAAgC,SAACC,EAAoBvD,GACtD,IAAMwD,EAAWjS,EAAKkS,UAAWnS,EAAYC,EAAKD,UAAW0D,EAAU1D,EAAUmE,cAC3EiO,EAAkBpS,EAAUqP,cAAc5J,QAChD,GAAK2M,EAAL,CAGA,IAAMC,EAAOD,EAAiBE,EAAWtS,EAAUT,OAAOkG,QACtD6M,IACAA,EAAS9S,MAAM+S,cAAgBF,IAASC,EAAW,UAAY,SAE7D5O,EAAQ2L,cAAcQ,OAAO2C,QAAQjM,QAAU7C,EAAQ2L,cAAcQ,OAAOD,QAAQrJ,UAG1FgI,EAAe6D,EAAiBK,EAAAA,GAAgBP,EAASQ,UAAWhE,GACpEH,EAAe6D,EAAiBO,EAAAA,GAAiBT,EAASU,WAAYlE,GACtEH,EAAe6D,EAAiBS,EAAAA,GAAgBX,EAASY,UAAWpE,GAC/DhL,EAAQ2L,cAAcQ,OAAOD,QAAQrJ,QAItCgI,EAAe6D,EAAiBW,EAAAA,GAAeb,EAASc,cAAetE,GACvEH,EAAe6D,EAAiBa,EAAAA,GAAcf,EAASgB,QAASxE,GAChEH,EAAe6D,EAAiBe,EAAAA,GAAgBjB,EAASkB,UAAW1E,IALpEH,EAAe6D,EAAiBW,EAAAA,GAAeb,EAASmB,SAAU3E,GAOtEH,EAAe6D,EAAiBH,EAAoBC,EAASoB,WAAY5E,GACzEH,EAAe6D,EAAiBmB,EAAAA,GAAkBrB,EAASsB,YAAa9E,GApBxE,CAqBJ,EACAvO,KAAKsT,iBAAmB,SAAC/E,GACrB,IAAMwD,EAAWjS,EAAKkS,UAAWnS,EAAYC,EAAKD,UAA8C0T,EAAzB1T,EAAUmE,cAAoCkL,cAAcsE,UAAWrB,EAAWtS,EAAUT,OAAOkG,QACtKwM,EAAqB2B,EAAAA,GACzB,GAAmB,WAAfF,EACA1T,EAAUqP,cAAc5J,QAAUoO,OAClC5B,EAAqB6B,EAAAA,QAEpB,GAAmB,WAAfJ,GAA2BpB,EAAU,KAAAyB,EAC1C/T,EAAUqP,cAAc5J,QAAgC,QAAzBsO,EAAGzB,EAAS0B,qBAAa,IAAAD,EAAAA,EAAIzB,EAAS2B,UACzE,MAEIjU,EAAUqP,cAAc5J,QAAU6M,EAEtCrS,EAAKiU,kBAAkBxF,GACvBzO,EAAKkU,cAAczF,GACnBzO,EAAK+R,8BAA8BC,EAAoBvD,GACnD1J,UACAuJ,EAAevJ,SAAUoP,EAAAA,GAAuBlC,EAASmC,iBAAkB3F,GAAK,EAExF,EACAvO,KAAK+T,kBAAoB,SAACxF,GACtB,IAAMwD,EAAWjS,EAAKkS,UAAWmC,GAAaC,EAAAA,EAAAA,IAAe,gCACxDD,SAG+BjV,IAAhCiV,EAAWpP,sBAIgB7F,IAA3BiV,EAAWE,cAGX9F,EACA4F,EAAWE,YAAYtC,EAASuC,gBAGhCH,EAAWI,eAAexC,EAASuC,iBAVnClG,EAAe+F,EAAY,SAAUpC,EAASyC,YAAajG,GAYnE,EACAvO,KAAKgU,cAAgB,SAACzF,GAClB,IAAMwD,EAAWjS,EAAKkS,UAAWnS,EAAYC,EAAKD,UAClD,GADuEA,EAAUmE,cACpEkL,cAAcQ,OAAOlN,OAGlC,GAA8B,qBAAnBiS,eAAX,CAIA,IAAMtC,EAAWtS,EAAUT,OAAOkG,QAC9BxF,EAAK4U,kBAAoBnG,GACrB4D,GACArS,EAAK4U,gBAAgBC,UAAUxC,GAEnCrS,EAAK4U,gBAAgBzN,oBACdnH,EAAK4U,kBAEN5U,EAAK4U,iBAAmBnG,GAAO4D,IACrCrS,EAAK4U,gBAAkB,IAAID,gBAAe,SAACG,GACzBA,EAAQnE,MAAK,SAAC1P,GAAC,OAAKA,EAAE8T,SAAW1C,CAAQ,KAIvDrS,EAAKuR,qBACT,IACAvR,EAAK4U,gBAAgBvN,QAAQgL,GAjBjC,MAFI/D,EAAesF,OAAQoB,EAAAA,GAAa/C,EAASvP,OAAQ+L,EAqB7D,EACAvO,KAAK+U,WAAa,WACd,IAAQ7F,EAAkBpP,EAAKD,UAAvBqP,cACR,GAAKA,EAAL,CAGA,IAAQC,EAAUD,EAAVC,MACRA,EAAM6F,UAAW,EACjB7F,EAAM8F,aAAe9F,EAAM3H,QAH3B,CAIJ,EACAxH,KAAKkV,iBAAmB,SAACnU,GACf,IAAAlB,EAAYC,EAAKD,UAAW0D,EAAU1D,EAAUmE,cAAiBmL,EAAUtP,EAAUqP,cAApBC,MACvEA,EAAMgG,QAAS,EACf,IAAIC,GAAU,EACRC,EAAgBlG,EAAM3H,SAC5B,GAAK6N,GAAkB9R,EAAQ2L,cAAcQ,OAAOD,QAAQrJ,OAA5D,CAEC,IACyCjG,EADzCC,GAAAC,EAAAA,EAAAA,GACwBR,EAAUuM,SAAO,IAA1C,IAAAhM,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAA4C,KAA9B8B,GAA8B6G,EAAAA,EAAAA,GAAAjJ,EAAAT,MAAA,GAAxB,GAChB,GAAK6C,EAAO+S,qBAGZF,EAAU7S,EAAO+S,mBAAmBD,IAEhC,KAER,CAAC,OAAAvU,GAAAV,EAAAW,EAAAD,EAAA,SAAAV,EAAAY,GAAA,CACIoU,GACDtV,EAAKiP,mBAAmBhO,GAE5BoO,EAAM6F,UAAW,CAbjB,CAcJ,EACAhV,KAAK+P,kBAAoB,WACrB,IAAMb,EAAgBpP,EAAKD,UAAUqP,cACrC,GAAKA,EAAL,CAGA,IAAMC,EAAQD,EAAcC,aACrBA,EAAM3H,gBACN2H,EAAME,qBACNF,EAAM8F,aACb/F,EAAcqG,OAAS9B,EAAAA,GACvBtE,EAAMgG,QAAS,EACfhG,EAAM6F,UAAW,CAPjB,CAQJ,EACAhV,KAAKwV,gBAAkB,SAACzU,GACpB,IAAMlB,EAAYC,EAAKD,UAAW0D,EAAU1D,EAAUmE,cAAekL,EAAgBrP,EAAUqP,cAAeiD,EAAWtS,EAAUT,OAAOkG,QAC1I,GAAkB,OAAb4J,QAAa,IAAbA,GAAAA,EAAe5J,QAApB,CAIA,IAAImQ,EACJ,GAFAvG,EAAcC,MAAMgG,QAAS,EAEzBpU,EAAEqK,KAAKsK,WAAW,WAAY,CAC9B5V,EAAKkP,UAAW,EAChB,IAAM2G,EAAa5U,EACnB,GAAImO,EAAc5J,UAAYoO,QAC1B,GAAIvB,EAAU,CACV,IAAMyD,EAAazD,EAAS0D,wBAC5BJ,EAAM,CACFK,EAAGH,EAAWI,QAAUH,EAAW/N,KACnCmO,EAAGL,EAAWM,QAAUL,EAAWhO,IAE3C,OAEC,GAAwC,WAApCrE,EAAQ2L,cAAcsE,UAAwB,CACnD,IAAM0C,EAASP,EAAWd,OAAQA,EAASc,EAAWQ,cACtD,GAAID,GAAUrB,GAAU1C,EAAU,CAC9B,IAAMiE,EAAaF,EAAOL,wBAAyBQ,EAAaxB,EAAOgB,wBAAyBS,EAAanE,EAAS0D,wBACtHJ,EAAM,CACFK,EAAGH,EAAWY,QA5O3B,EA4O8CH,EAAWvO,MAAQwO,EAAWxO,KAAOyO,EAAWzO,MACjFmO,EAAGL,EAAWa,QA7O3B,EA6O8CJ,EAAWxO,KAAOyO,EAAWzO,IAAM0O,EAAW1O,KAEvF,KACK,KAAA6O,EAAAC,EACDjB,EAAM,CACFK,EAAqB,QAApBW,EAAEd,EAAWY,eAAO,IAAAE,EAAAA,EAAId,EAAWI,QACpCC,EAAqB,QAApBU,EAAEf,EAAWa,eAAO,IAAAE,EAAAA,EAAIf,EAAWM,QAE5C,CACJ,MACK,GAAIN,EAAWd,SAAW1C,EAAU,KAAAwE,EAAAC,EACrCnB,EAAM,CACFK,EAAqB,QAApBa,EAAEhB,EAAWY,eAAO,IAAAI,EAAAA,EAAIhB,EAAWI,QACpCC,EAAqB,QAApBY,EAAEjB,EAAWa,eAAO,IAAAI,EAAAA,EAAIjB,EAAWM,QAE5C,CACJ,MAGI,GADAnW,EAAKkP,SAAsB,cAAXjO,EAAEqK,KACd+G,EAAU,KAAA0E,EAAAC,EACJC,EAAahW,EAAqBiW,EAAYD,EAAWE,QAAQF,EAAWE,QAAQzX,OAArD,GAA6E8W,EAAanE,EAAS0D,wBACxIJ,EAAM,CACFK,EAAGkB,EAAUjB,SAA0B,QAAnBc,EAAIP,EAAWzO,YAAI,IAAAgP,EAAAA,EAF0I,GAGjLb,EAAGgB,EAAUf,SAAyB,QAAlBa,EAAIR,EAAW1O,WAAG,IAAAkP,EAAAA,EAH2I,GAKzL,CAEJ,IAAMxJ,EAAUzN,EAAUsN,OAAOI,WAC7BkI,IACAA,EAAIK,GAAKxI,EACTmI,EAAIO,GAAK1I,GAEb4B,EAAcC,MAAM3H,SAAWiO,EAC/BvG,EAAcqG,OAASjD,EAAAA,EAtDvB,CAuDJ,EACAtS,KAAKkX,UAAY,SAACnW,GAEd,IADA,IAAMkE,EAAMlE,EACZoW,EAAA,EAAAC,EADyBC,MAAMC,KAAKrS,EAAIsS,gBACbJ,EAAAC,EAAA5X,OAAA2X,IAAE,CAAxB,IAAMK,EAAKJ,EAAAD,GACZrX,EAAKsX,SAASK,OAAOD,EAAME,WAC/B,CACA5X,EAAKiQ,mBACT,EACA/P,KAAK2X,eAAiB,SAAC5W,GAEnB,IADA,IAAMkE,EAAMlE,EACZ6W,EAAA,EAAAC,EADyBR,MAAMC,KAAKrS,EAAIsS,gBACbK,EAAAC,EAAArY,OAAAoY,IAAE,CAAxB,IAAMJ,EAAKK,EAAAD,GACZ9X,EAAKsX,SAASK,OAAOD,EAAME,WAC/B,CACA5X,EAAKoV,iBAAiBnU,EAC1B,EACAf,KAAK8X,YAAc,SAAC/W,GAEhB,IADA,IAAMkE,EAAMlE,EACZgX,EAAA,EAAAC,EADyBX,MAAMC,KAAKrS,EAAIsS,gBACbQ,EAAAC,EAAAxY,OAAAuY,IAAE,CAAxB,IAAMP,EAAKQ,EAAAD,GACZjY,EAAKsX,SAASa,IAAIT,EAAME,WAAYQ,YAAYC,MACpD,CACArY,EAAK0V,gBAAgBzU,EACzB,EACAf,KAAKgP,UAAW,EAChBhP,KAAKoX,SAAW,IAAIgB,IACpBpY,KAAKgS,UAAY,CACbiB,UAAW,kBAAMnT,EAAKiV,YAAY,EAClC5B,WAAY,kBAAMrT,EAAKiQ,mBAAmB,EAC1CwC,UAAW,SAACxR,GAAC,OAAKjB,EAAK0V,gBAAgBzU,EAAE,EACzCgS,QAAS,SAAChS,GAAC,OAAKjB,EAAKoV,iBAAiBnU,EAAE,EACxC0R,WAAY,SAAC1R,GAAC,OAAKjB,EAAKgY,YAAY/W,EAAE,EACtC4R,UAAW,SAAC5R,GAAC,OAAKjB,EAAK0V,gBAAgBzU,EAAE,EACzCmS,SAAU,SAACnS,GAAC,OAAKjB,EAAKoX,UAAUnW,EAAE,EAClCsS,YAAa,SAACtS,GAAC,OAAKjB,EAAKoX,UAAUnW,EAAE,EACrC8R,cAAe,SAAC9R,GAAC,OAAKjB,EAAK6X,eAAe5W,EAAE,EAC5CmT,iBAAkB,kBAAMpU,EAAKgR,yBAAyB,EACtD0D,YAAa,SAACzT,GAAC,OAAKjB,EAAKkQ,mBAAmBjP,EAAE,EAC9CuT,eAAgB,SAACvT,GAAC,OAAKjB,EAAKkQ,mBAAmBjP,EAAE,EACjDyB,OAAQ,WACJ1C,EAAKuR,qBACT,EAER,CAMC,OANApJ,EAAAA,EAAAA,GAAA6G,EAAA,EAAA/P,IAAA,eAAAW,MACD,WACIM,KAAKsT,kBAAiB,EAC1B,GAAC,CAAAvU,IAAA,kBAAAW,MACD,WACIM,KAAKsT,kBAAiB,EAC1B,KAACxE,CAAA,CA7SsB,G,oBCpBduJ,EAAkB,WAC3B,SAAAA,EAAYC,EAAQzY,IAAWE,EAAAA,EAAAA,GAAA,KAAAsY,GAC3BrY,KAAKH,UAAYA,EACjBG,KAAKuY,QAAUD,EACftY,KAAKwY,aAAe,GACpBxY,KAAKyY,qBAAuB,GAC5BzY,KAAK0Y,qBAAuB,EAChC,CAkDC,OAlDAzQ,EAAAA,EAAAA,GAAAoQ,EAAA,EAAAtZ,IAAA,mBAAAW,MACD,SAAiB8I,GAAO,IAC8BrI,EAD9BC,GAAAC,EAAAA,EAAAA,GACKL,KAAKyY,sBAAoB,IAAlD,IAAArY,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAAoD,KAAzCkY,EAAUxY,EAAAT,MACbiZ,EAAWC,aACXD,EAAWE,SAASrQ,EAE5B,CAAC,OAAA1H,GAAAV,EAAAW,EAAAD,EAAA,SAAAV,EAAAY,GAAA,CACL,GAAC,CAAAjC,IAAA,kBAAAW,MACD,SAAgBkQ,GAAM,IACgCrO,EADhCC,GAAAnB,EAAAA,EAAAA,GACOL,KAAKyY,sBAAoB,IAAlD,IAAAjX,EAAAjB,MAAAgB,EAAAC,EAAAhB,KAAAC,MAAoD,KAAAqY,EAAzCH,EAAUpX,EAAA7B,MACS,QAA1BoZ,EAAAH,EAAW9I,uBAAe,IAAAiJ,GAA1BA,EAAAjY,KAAA8X,EAA6B/I,EACjC,CAAC,OAAA9O,GAAAU,EAAAT,EAAAD,EAAA,SAAAU,EAAAR,GAAA,CACL,GAAC,CAAAjC,IAAA,OAAAW,MAAA,eAAAgL,GAAAvH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAC,IAAA,IAAAlB,EAAAD,EAAAwW,EAAA,OAAAvV,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC8B/D,KAAKuY,QAAQQ,eAAe/Y,KAAKH,WAAW,GAAK,OAA3EG,KAAKwY,aAAY3U,EAAAmV,KACjBhZ,KAAKyY,qBAAuB,GAC5BzY,KAAK0Y,qBAAuB,GAAGtW,GAAA/B,EAAAA,EAAAA,GACNL,KAAKwY,cAAY3U,EAAAC,KAAA,EAAA1B,EAAA7B,IAAA,WAAA4B,EAAAC,EAAA5B,KAAAC,KAAE,CAAFoD,EAAAE,KAAA,SAA/B4U,EAAUxW,EAAAzC,MAAAmE,EAAAyH,GACTqN,EAAWvN,KAAIvH,EAAAE,KACd,aADcF,EAAAyH,GACJ,GAGV,cAHUzH,EAAAyH,GAGC,oBAF+B,OAA3CtL,KAAKyY,qBAAqBnM,KAAKqM,GAAY9U,EAAAwC,OAAA,oBAGA,OAA3CrG,KAAK0Y,qBAAqBpM,KAAKqM,GAAY9U,EAAAwC,OAAA,oBAGnDsS,EAAWvL,OAAO,QAAAvJ,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAoV,GAAApV,EAAA,SAAAzB,EAAArB,EAAA8C,EAAAoV,IAAA,eAAApV,EAAAC,KAAA,GAAA1B,EAAApB,IAAA6C,EAAAqV,OAAA,6BAAArV,EAAAuB,OAAA,GAAA9B,EAAA,yBAEzB,yBAAAoH,EAAAgB,MAAA,KAAAnM,UAAA,EAhBA,IAgBA,CAAAR,IAAA,oBAAAW,MACD,SAAkBQ,EAAUsI,GAAO,IACmB5F,EADnBC,GAAAxC,EAAAA,EAAAA,GACNL,KAAKyY,sBAAoB,IAAlD,IAAA5V,EAAAtC,MAAAqC,EAAAC,EAAArC,KAAAC,MAAoD,CAA/BmC,EAAAlD,MACN2I,MAAMnI,EAAUsI,EAC/B,CAAC,OAAA1H,GAAA+B,EAAA9B,EAAAD,EAAA,SAAA+B,EAAA7B,GAAA,KACiDiK,EADjDC,GAAA7K,EAAAA,EAAAA,GACwBL,KAAK0Y,sBAAoB,IAAlD,IAAAxN,EAAA3K,MAAA0K,EAAAC,EAAA1K,KAAAC,MAAoD,KAAzCkY,EAAU1N,EAAAvL,MACbiZ,EAAWC,UAAU1Y,IACrByY,EAAWE,SAAS3Y,EAAUsI,EAEtC,CAAC,OAAA1H,GAAAoK,EAAAnK,EAAAD,EAAA,SAAAoK,EAAAlK,GAAA,CACL,GAAC,CAAAjC,IAAA,QAAAW,MACD,SAAMQ,GAAU,IACsCgM,EADtCC,GAAA9L,EAAAA,EAAAA,GACaL,KAAKyY,sBAAoB,IAAlD,IAAAtM,EAAA5L,MAAA2L,EAAAC,EAAA3L,KAAAC,MAAoD,KAAzCkY,EAAUzM,EAAAxM,MACbiZ,EAAWC,aACXD,EAAWQ,MAAMjZ,EAEzB,CAAC,OAAAY,GAAAqL,EAAApL,EAAAD,EAAA,SAAAqL,EAAAnL,GAAA,KACiDuL,EADjDC,GAAAnM,EAAAA,EAAAA,GACwBL,KAAK0Y,sBAAoB,IAAlD,IAAAlM,EAAAjM,MAAAgM,EAAAC,EAAAhM,KAAAC,MAAoD,KAAzCkY,EAAUpM,EAAA7M,MACbiZ,EAAWC,UAAU1Y,IACrByY,EAAWQ,MAAMjZ,EAEzB,CAAC,OAAAY,GAAA0L,EAAAzL,EAAAD,EAAA,SAAA0L,EAAAxL,GAAA,CACL,KAACqX,CAAA,CAzD0B,G,uCCQUe,EAAO,GAqBhD,SAASC,EAAWC,GAChB,IAAKC,EAAAA,EAAAA,IAAUD,EAAKE,QAASF,EAAKG,YAAlC,CAGA,IAAMC,EAzB4B,EAyBjBJ,EAAKnY,OAClBmY,EAAKK,MAAQL,EAAKM,SAAWF,EAC7BJ,EAAKO,OAAOP,EAAKnY,QAEZmY,EAAKK,MAAQD,GAClBJ,EAAKO,MAAMP,EAAKnY,OANpB,CAQJ,CACO,IAAM2Y,EAAQ,WACjB,SAAAA,EAAYxB,EAAQzY,GAAW,IAAAC,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAA+Z,GAC3B9Z,KAAKH,UAAYA,EACjBG,KAAK+Z,cAAgB,SAACla,EAAW2H,EAAUC,GAAyC,IAAAuS,EAAAC,EAAAC,EAAAC,EACtCha,EADKia,EAAQ7a,UAAAC,OAAA,QAAAN,IAAAK,UAAA,GAAAA,UAAA,GApCzC,EAoC6Da,GAAAC,EAAAA,EAAAA,GAClDR,EAAUuM,SAAO,IAA1C,IAAAhM,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAA4C,KAA9B8B,GAA8B6G,EAAAA,EAAAA,GAAAjJ,EAAAT,MAAA,GAAxB,GACV2a,OAAwCnb,IAA5BqD,EAAO+X,iBAAiC/X,EAAO+X,iBAAiB9S,EAAU1H,QAAQZ,EACpG,GAAImb,EACA,OAAOE,EAAAA,EAASC,OAAOH,EAAUvE,EAAGuE,EAAUrE,EAAGvO,EAEzD,CAAC,OAAA3G,GAAAV,EAAAW,EAAAD,EAAA,SAAAV,EAAAY,GAAA,CACD,IAAMyZ,EAAa5a,EAAUT,OAAOuH,KAAM+T,GAAgBC,EAAAA,EAAAA,IAAkC,CACxFhU,KAAM8T,EACNjT,SAAUA,IACViO,EAAM8E,EAAAA,EAASC,OAAOE,EAAc5E,EAAG4E,EAAc1E,EAAGvO,GAAStG,EAASrB,EAAK+I,YAAa+R,EAAW9a,EAAKyD,QAAQ4C,KAAKyU,SAAUC,EAAgB,SAACrB,GACpJH,EAAW,CACPG,QAAAA,EACAC,WAAY,CAAC,UACbE,MAAOlE,EAAIK,EACX8D,SAAU/Z,EAAUT,OAAOuH,KAAKmB,MAChC+R,MAAO,SAACna,GAAK,OAAM+V,EAAIK,GAAKpW,CAAK,EACjCyB,OAAAA,GAER,EAAG2Z,EAAc,SAACtB,GACdH,EAAW,CACPG,QAAAA,EACAC,WAAY,CAAC,UACbE,MAAOlE,EAAIO,EACX4D,SAAU/Z,EAAUT,OAAOuH,KAAKoB,OAChC8R,MAAO,SAACna,GAAK,OAAM+V,EAAIO,GAAKtW,CAAK,EACjCyB,OAAAA,GAER,EAKA,GAJA0Z,EAA2B,QAAdb,EAACY,EAAS/S,YAAI,IAAAmS,EAAAA,EAAIY,EAASjK,SACxCkK,EAA4B,QAAfZ,EAACW,EAASG,aAAK,IAAAd,EAAAA,EAAIW,EAASjK,SACzCmK,EAAwB,QAAbZ,EAACU,EAAShT,WAAG,IAAAsS,EAAAA,EAAIU,EAASjK,SACrCmK,EAA2B,QAAhBX,EAACS,EAASI,cAAM,IAAAb,EAAAA,EAAIS,EAASjK,SACpC7Q,EAAKmb,cAAcxF,EAAK2E,GAAW,CAEnC,OAAOta,EAAKia,cAAcla,OAAWX,EAAWuI,EAAQ2S,EADtC,EAEtB,CACA,OAAO3E,CACX,EACAzV,KAAKkb,mBAAqB,WACtB,IAA8DC,GAAzCC,EAAAA,EAAAA,IAAwBtb,EAAKub,WAA+BC,OAAQC,EAAczb,EAAKyD,QAAQ4C,KACpH,GAA8B,WAA1BoV,EAAYF,WAAoD,YAA1BE,EAAYF,UAClD,OAAOF,EAEX,IAAMK,GAAMC,EAAAA,EAAAA,KAASC,EAAAA,EAAAA,IAAcH,EAAYI,MAAMjc,QAASkc,GAAYH,EAAAA,EAAAA,KAASC,EAAAA,EAAAA,IAAcH,EAAYI,MAAME,SAAUC,EAAQ,CACjIjU,KAAM+T,EAAYJ,EAAMpC,EACxB2B,MAAOa,EAAYJ,EAAMpC,GAQ7B,OANKmC,EAAYQ,WACbZ,EAAIQ,QAASK,EAAAA,EAAAA,KAAcC,EAAAA,EAAAA,IAAcH,EAAMjU,KAAMiU,EAAMf,SAE3DQ,EAAYW,QAAuC,kBAAtBX,EAAYY,QACzChB,EAAI3b,SAAU4c,EAAAA,EAAAA,OAEXjB,CACX,EACAnb,KAAKib,cAAgB,SAACxF,GAAsC,IAAjC2E,EAAQ7a,UAAAC,OAAA,QAAAN,IAAAK,UAAA,GAAAA,UAAA,GA5FjB,EA6FR8c,EAAoBvc,EAAKyD,QAAQ+Y,WAAYnb,EAASrB,EAAK+I,YACjE,IAAKwT,EAAkBjW,OACnB,OAAO,EAEX,IAAMmW,EAAiBF,EAAkBG,QACzC,GAAID,EAAenW,OACf,OAAO,EAEX,IAAMqW,EAAUF,EAAeE,QAC/B,GAAIA,GADiD,GACxBrC,EAAWqC,EACpC,MAAM,IAAIC,MAAM,GAADC,OAAIC,EAAAA,GAAW,iDAElC,QAAS9c,EAAKD,UAAUqG,UAAUuK,MAAK,SAACvQ,GAAQ,OAAK2c,EAAAA,EAAAA,IAAYpH,EAAKvV,EAASsH,UAAYrG,EAASjB,EAAS2I,WAAW,GAC5H,EACA7I,KAAK8c,cAAgB,SAACrZ,GAAU,IAAAsZ,EAC5B,IAAKtZ,IAAU3D,EAAKkd,OAAUld,EAAKmd,YAAcnd,EAAKkd,KAAKE,MACvD,OAAOzZ,EAEX,IAAgC0Z,EAAard,EAAKkd,KAAKI,YAActd,EAAKkd,KAAKK,SAAWC,EAAvE,EAAyGC,EAAUzd,EAAKkd,KAAKI,WAAaxT,KAAK4T,GAAKpE,EAA1I,EAC7B,OAD6LxP,KAAK6T,QAAuB,QAAhBV,EAACjd,EAAKkd,KAAKrB,aAAK,IAAAoB,EAAAA,EAA5L,GAAwMQ,IAAY3T,KAAK4T,GAAKL,IA/GjO,EAmHtBrd,EAAKmd,UACEnd,EAAKmd,UAEZnd,EAAKkd,KAAKE,OACHQ,EAAAA,EAAAA,IAASja,EAAO3D,EAAKkd,KAAKE,MAAM9R,KAAMtL,EAAKkd,KAAKE,MAAMxd,OAE1D+D,EARIA,CASf,EACAzD,KAAK2d,cAAgB,SAACnW,GAAa,IAAAoW,EAAAC,EACzBhe,EAAYC,EAAKD,UAAWie,GAAcpC,EAAAA,EAAAA,IAAc5b,EAAKyD,QAAQkE,OAAO/H,OAClFI,EAAK0H,SAAW1H,EAAKia,cAAcla,EAAW2H,GAAUuW,EAAAA,EAAAA,IAAMD,EADmC,EAChBje,EAAUme,UAC3Fle,EAAKme,gBAAkBne,EAAK0H,SAAS8T,OACrC,IAAMb,EAAa5a,EAAUT,OAAOuH,KAOpC,OANA7G,EAAKoe,YAAU/Z,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IACRga,EAAAA,EAAAA,IAAYre,EAAKyD,QAAQ4C,KAAKiY,OAAQ3D,IAAW,IACpDtZ,OAAuC,QAAjCyc,EAAE9d,EAAKyD,QAAQ4C,KAAKiY,OAAOjd,cAAM,IAAAyc,EAAAA,EAHe,EAItDhO,KAAmC,QAA/BiO,EAAE/d,EAAKyD,QAAQ4C,KAAKiY,OAAOxO,YAAI,IAAAiO,EAAAA,EAAI,YAE3C/d,EAAKub,WAAYgD,EAAAA,EAAAA,IAA0Bve,EAAKyD,QAAQ4C,KAAKkV,UAAWvb,EAAK0H,SAAU1H,EAAKoe,YACpFpe,EAAKyD,QAAQ4C,KAAKkV,WACtB,IAAK,SACDvb,EAAKwe,QAAU,SACf,MACJ,IAAK,UACDxe,EAAKwe,QAAU,UAGvBxe,EAAK+b,OAAS0C,EAAAA,EAAOC,MACzB,EACAxe,KAAKuY,QAAUD,CACnB,CA2LC,OA3LArQ,EAAAA,EAAAA,GAAA6R,EAAA,EAAA/a,IAAA,UAAAW,MACD,SAAQ+e,GAAU,IAAAC,EACd,IAAI1e,KAAK2e,cAAe3e,KAAK4I,UAA7B,CAGA5I,KAAK4I,WAAY,EACjB5I,KAAK+J,OAAO6U,SAAU,EACtB5e,KAAK6e,KAAKD,SAAU,EACpB,IAAM/e,EAAYG,KAAKH,UAAWif,EAAgB9e,KAAK8e,cAAeC,EAAclf,EAAUmf,aAAa9W,IAAIlI,KAAKif,OACzG,OAAXF,QAAW,IAAXA,GAA4B,QAAjBL,EAAXK,EAAaG,uBAAe,IAAAR,GAA5BA,EAAA7d,KAAAke,EAA+B/e,MAAM,IACKuB,EADLC,GAAAnB,EAAAA,EAAAA,GACZR,EAAUuM,SAAO,IAA1C,IAAA5K,EAAAjB,MAAAgB,EAAAC,EAAAhB,KAAAC,MAA4C,KAAA0e,EAA9B5c,GAA8B6G,EAAAA,EAAAA,GAAA7H,EAAA7B,MAAA,GAAxB,GACQ,QAAxByf,EAAA5c,EAAO6c,yBAAiB,IAAAD,GAAxBA,EAAAte,KAAA0B,EAA2BvC,KAAMye,EACrC,CAAC,OAAA3d,GAAAU,EAAAT,EAAAD,EAAA,SAAAU,EAAAR,GAAA,KACiDmB,EADjDC,GAAA/B,EAAAA,EAAAA,GACqBR,EAAUqG,UAAUuG,UAAQ,IAAlD,IAAArK,EAAA7B,MAAA4B,EAAAC,EAAA5B,KAAAC,MAAoD,KAAA4e,EAAzC1e,EAAOwB,EAAAzC,MACW,QAAzB2f,EAAA1e,EAAQye,yBAAiB,IAAAC,GAAzBA,EAAAxe,KAAAF,EAA4BX,KAAMye,EACtC,CAAC,OAAA3d,GAAAsB,EAAArB,EAAAD,EAAA,SAAAsB,EAAApB,GAAA,CACY,OAAb8d,QAAa,IAAbA,GAAAA,EAAe3F,MAAMnZ,MACrBA,KAAKuY,QAAQ+G,cAAc,oBAAqB,CAC5Czf,UAAWG,KAAKH,UAChByZ,KAAM,CACFpZ,SAAUF,OAhBlB,CAmBJ,GAAC,CAAAjB,IAAA,OAAAW,MACD,SAAK8I,GACD,IAC0C5F,EADpC/C,EAAYG,KAAKH,UAAWT,EAASS,EAAUT,OAAOyD,GAAAxC,EAAAA,EAAAA,GACnCR,EAAUuM,SAAO,IAA1C,IAAAvJ,EAAAtC,MAAAqC,EAAAC,EAAArC,KAAAC,MAA4C,KAA9B8B,GAA8B6G,EAAAA,EAAAA,GAAAxG,EAAAlD,MAAA,GAAxB,GAChBN,EAAOoL,mBAAmBjI,EAAQvC,KAAMwI,EAC5C,CAAC,OAAA1H,GAAA+B,EAAA9B,EAAAD,EAAA,SAAA+B,EAAA7B,GAAA,CACD5B,EAAO+K,aAAanK,KAAMwI,EAC9B,GAAC,CAAAzJ,IAAA,eAAAW,MACD,WAAe,IAAA6f,EACX,OAAOvf,KAAK8c,cAA+B,QAAlByC,EAACvf,KAAK+J,OAAOtG,aAAK,IAAA8b,EAAAA,GAAIC,EAAAA,EAAAA,IAAoBxf,KAAKyD,OAC5E,GAAC,CAAA1E,IAAA,UAAAW,MACD,WACI,OAAOkK,KAAAC,IAAA7J,KAAK6I,YApL6C,GAoLlBe,KAAK4T,GAAKpE,CACrD,GAAC,CAAAra,IAAA,cAAAW,MACD,WACI,MAAO,CACHoW,EAAG9V,KAAKwH,SAASsO,EAAI9V,KAAK6b,OAAO/F,EACjCE,EAAGhW,KAAKwH,SAASwO,EAAIhW,KAAK6b,OAAO7F,EACjCyJ,EAAGzf,KAAKwH,SAASiY,EAEzB,GAAC,CAAA1gB,IAAA,YAAAW,MACD,WAAY,IAAAggB,EACR,OAAyB,QAAzBA,EAAO1f,KAAK+J,OAAO5I,cAAM,IAAAue,EAAAA,EAAI1f,KAAK2G,KAAKjH,KAC3C,GAAC,CAAAX,IAAA,iBAAAW,MACD,WAAiB,IAAAigB,EACb,OAAO3f,KAAK8c,cAA+B,QAAlB6C,EAAC3f,KAAK+J,OAAOtG,aAAK,IAAAkc,EAAAA,GAAIH,EAAAA,EAAAA,IAAoBxf,KAAK4f,aAC5E,GAAC,CAAA7gB,IAAA,OAAAW,MACD,SAAKmgB,EAAIrY,EAAUsY,EAAiBC,GAAO,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACjC7gB,EAAYG,KAAKH,UAAWyY,EAAStY,KAAKuY,QAChDvY,KAAK6f,GAAKA,EACV7f,KAAK+f,MAAQA,EACb/f,KAAK2gB,aAAc,EACnB3gB,KAAK4gB,YAAa,EAClB5gB,KAAK6gB,YAAa,EAClB7gB,KAAK8gB,WAAY,EACjB9gB,KAAK+gB,cAAe,EACpB/gB,KAAKghB,aAAe,EACpBhhB,KAAK4I,WAAY,EACjB5I,KAAK2e,aAAc,EACnB3e,KAAKihB,SAAW,EAChBjhB,KAAKkhB,WAAY,EACjBlhB,KAAKmN,OAAS,CACVgU,YAAa,CAAC,GAElBnhB,KAAKse,QAAU,SACfte,KAAKohB,oBAAqB,EACpB,IAAA9T,EAAUzN,EAAUsN,OAAOI,WAAY8T,EAAcxhB,EAAUmE,cAAesd,GAAmBC,EAAAA,EAAAA,GAAqBvhB,KAAKuY,QAAS1Y,EAAWwhB,EAAYnb,WAAYsb,EAAaF,EAAiBG,OAAOrW,KAAMsW,EAAYJ,EAAiBrC,MAAM7T,KAAQuW,EAAqBL,EAArBK,iBACnQ3hB,KAAKyhB,QAASG,EAAAA,EAAAA,IAAyBJ,EAAYxhB,KAAK6f,GAAI8B,GAC5D3hB,KAAKif,OAAQ2C,EAAAA,EAAAA,IAAyBF,EAAW1hB,KAAK6f,GAAI8B,GAC1D,IAAME,EAAgBP,EAAiBG,OAAQK,EAAeR,EAAiBrC,MAC/E,GAAIa,EAAiB,KAAAiC,EAAAC,EACjB,GAA0B,QAA1BD,EAAIjC,EAAgB2B,cAAM,IAAAM,GAAtBA,EAAwB3W,KAAM,CAC9B,IAAM6W,EAAqBnC,EAAgB2B,OAAOrW,KAAMqW,GAASG,EAAAA,EAAAA,IAAyBK,EAAoBjiB,KAAK6f,GAAI8B,GACnHF,IACAzhB,KAAKyhB,OAASA,EACdI,EAAcK,KAAKpC,EAAgB2B,QAE3C,CACA,GAAyB,QAAzBO,EAAIlC,EAAgBb,aAAK,IAAA+C,GAArBA,EAAuB5W,KAAM,CAC7B,IAAM+W,EAAoBrC,EAAgBb,MAAM7T,KAAM6T,GAAQ2C,EAAAA,EAAAA,IAAyBO,EAAmBniB,KAAK6f,GAAI8B,GAC/G1C,IACAjf,KAAKif,MAAQA,EACb6C,EAAaI,KAAKpC,EAAgBb,OAE1C,CACJ,CACAjf,KAAKoiB,WAzOb,SAAwBX,EAAQI,EAAehC,EAAI8B,GAC/C,IAAMS,EAAaP,EAActe,QAAQke,GACzC,GAAKW,EAGL,OAAO3c,EAAAA,EAAAA,IAAW,CACd4c,MAAOR,EAAcQ,MACrBxgB,KAAMggB,EAAchgB,OACrB+f,EAAAA,EAAAA,IAAyBQ,EAAYvC,EAAI8B,GAChD,CAgO0BW,CAAetiB,KAAKyhB,OAAQI,EAAe7hB,KAAK6f,GAAI8B,GACtE3hB,KAAKuiB,UAhOb,SAAuBtD,EAAO6C,EAAcjC,EAAI8B,GAC5C,IAAMY,EAAYT,EAAave,QAAQ0b,GACvC,GAAKsD,EAGL,OAAO9c,EAAAA,EAAAA,IAAW,CACd4c,MAAOP,EAAaO,MACpBxgB,KAAMigB,EAAajgB,OACpB+f,EAAAA,EAAAA,IAAyBW,EAAW1C,EAAI8B,GAC/C,CAuNyBa,CAAcxiB,KAAKif,MAAO6C,EAAc9hB,KAAK6f,GAAI8B,GAClEL,EAAiBY,KAAKpC,GACtB,IAAMsC,EAAapiB,KAAKoiB,WACpBA,GACAd,EAAiBY,KAAKE,EAAWlc,WAErC,IAAMqc,EAAYviB,KAAKuiB,UACnBA,GACAjB,EAAiBY,KAAKK,EAAUrc,WAEpC,IAAMgJ,EAAgB,IAAIuT,EAAAA,EAAcnK,EAAQzY,GAChDqP,EAAcgT,KAAKriB,EAAUmE,cAAckL,eAC3CA,EAAcgT,KAAKZ,EAAiBpS,eACpClP,KAAKkP,cAAgBA,EACrBlP,KAAK4gB,WAA6B,QAAnBZ,EAAa,OAAVoC,QAAU,IAAVA,OAAU,EAAVA,EAAYvgB,YAAI,IAAAme,EAAAA,EAAIsB,EAAiBG,OAAO5f,KAC9D7B,KAAK2gB,YAA+B,QAApBV,EAAa,OAAVmC,QAAU,IAAVA,OAAU,EAAVA,EAAYC,aAAK,IAAApC,EAAAA,EAAIqB,EAAiBG,OAAOY,MAChEriB,KAAK8gB,UAA2B,QAAlBZ,EAAY,OAATqC,QAAS,IAATA,OAAS,EAATA,EAAW1gB,YAAI,IAAAqe,EAAAA,EAAIoB,EAAiBrC,MAAMpd,KAC3D7B,KAAK6gB,WAA6B,QAAnBV,EAAY,OAAToC,QAAS,IAATA,OAAS,EAATA,EAAWF,aAAK,IAAAlC,EAAAA,EAAImB,EAAiBrC,MAAMoD,MAC7DriB,KAAKuD,QAAU+d,EACf,IAAMoB,EAAc1iB,KAAKuD,QAAQ4C,KAAKwc,KACtC3iB,KAAK4iB,WAAYlH,EAAAA,EAAAA,IAAcgH,EAAY/Q,MAAMjS,OAASkS,EAAAA,GACtD8Q,EAAYG,YACZ7iB,KAAK8e,cAAgB9e,KAAKuY,QAAQuK,iBAAiBJ,EAAYG,WAC3D7iB,KAAK8e,eAAiBjf,EAAUkjB,QAAQL,EAAYG,UAAW7iB,KAAK8e,gBACpE9e,KAAK8e,cAAc1R,KAAKvN,IAGhCA,EAAUsN,OAAO6V,aAAahjB,MAC9BA,KAAK2G,MAAOsc,EAAAA,EAAAA,IAAkCjjB,KAAKuD,QAAQoD,KAAM2G,GACjEtN,KAAK+J,OAAS,CACV6U,SAAS,GAEb5e,KAAK6e,KAAO,CACRD,SAAS,EACT/f,OAAQ,GAEZmB,KAAK2d,cAAcnW,GACnBxH,KAAKkjB,gBAAkBljB,KAAKkb,qBAC5Blb,KAAKmjB,SAAWnjB,KAAKkjB,gBAAgB5H,OAErCtb,KAAKojB,UADe,GACW1H,EAAAA,EAAAA,IAAc1b,KAAKuD,QAAQ4C,KAAKkd,OAC/D,IAAMnd,EAAYrG,EAAUqG,UAC5BA,EAAUod,cAActjB,KAAKwH,SAASiY,GACtCzf,KAAK0J,aAAe1J,KAAKwH,SAASiY,EAAI5f,EAAUme,QAChDhe,KAAKujB,MAAQ,GACb,IAAIC,EAAe3jB,EAAU4jB,cAAcvb,IAAIlI,KAAKyhB,QAC/C+B,IACDA,EAAexjB,KAAKuY,QAAQmL,gBAAgB1jB,KAAKyhB,UAE7C5hB,EAAU4jB,cAAcxL,IAAIjY,KAAKyhB,OAAQ+B,GAGjC,QAAhBpD,EAAIoD,SAAY,IAAApD,GAAZA,EAAcuD,YACdH,EAAaG,WAAW3jB,MAE5B,IAAI+e,EAAclf,EAAUmf,aAAa9W,IAAIlI,KAAKif,OAC7CF,IACDA,EAAc/e,KAAKuY,QAAQqL,eAAe5jB,KAAKif,SAE3Cpf,EAAUmf,aAAa/G,IAAIjY,KAAKif,MAAOF,GAGhC,QAAfsB,EAAItB,SAAW,IAAAsB,GAAXA,EAAawD,WACb9E,EAAY8E,UAAU7jB,MAE1B,IAAM8jB,EAA2B,QAAdxD,EAAGvB,SAAW,IAAAuB,OAAA,EAAXA,EAAayD,cAC/BD,IACA9jB,KAAKujB,MAAQO,EAAc9jB,OAE/BA,KAAK2I,UAAW,EAChB3I,KAAKgkB,aAAc9f,EAAAA,EAAAA,IAAgBlE,KAAKuD,QAAQgH,OAAO9G,OAAO,IACtBwH,EADsBC,GAAA7K,EAAAA,EAAAA,GACxC6F,EAAUuG,UAAQ,IAAxC,IAAAvB,EAAA3K,MAAA0K,EAAAC,EAAA1K,KAAAC,MAA0C,CAAxBwK,EAAAvL,MACN0N,KAAKpN,KACjB,CAAC,OAAAc,IAAAoK,EAAAnK,EAAAD,GAAA,SAAAoK,EAAAlK,GAAA,KACmCkL,EADnCC,GAAA9L,EAAAA,EAAAA,GACmB6F,EAAU+d,QAAM,IAApC,IAAA9X,EAAA5L,MAAA2L,EAAAC,EAAA3L,KAAAC,MAAsC,KAAAyjB,EAA3BC,EAAKjY,EAAAxM,MACF,QAAVwkB,EAAAC,EAAM/W,YAAI,IAAA8W,GAAVA,EAAArjB,KAAAsjB,EAAankB,KACjB,CAAC,OAAAc,IAAAqL,EAAApL,EAAAD,GAAA,SAAAqL,EAAAnL,GAAA,CACW,QAAZuf,EAAAiD,SAAY,IAAAjD,GAAc,QAAdC,EAAZD,EAAc6D,oBAAY,IAAA5D,GAA1BA,EAAA3f,KAAA0f,EAA6B1gB,EAAWG,MAC7B,QAAXygB,EAAA1B,SAAW,IAAA0B,GAAc,QAAdC,EAAXD,EAAa2D,oBAAY,IAAA1D,GAAzBA,EAAA7f,KAAA4f,EAA4B5gB,EAAWG,MAAM,IACHuM,EADGC,IAAAnM,EAAAA,EAAAA,GACpBR,EAAUuM,SAAO,IAA1C,IAAAI,GAAAjM,MAAAgM,EAAAC,GAAAhM,KAAAC,MAA4C,KAAA4jB,GAA9B9hB,IAA8B6G,EAAAA,EAAAA,GAAAmD,EAAA7M,MAAA,GAAxB,GACM,QAAtB2kB,GAAA9hB,GAAO+hB,uBAAe,IAAAD,IAAtBA,GAAAxjB,KAAA0B,GAAyBvC,KAC7B,CAAC,OAAAc,IAAA0L,GAAAzL,EAAAD,GAAA,SAAA0L,GAAAxL,GAAA,CACL,GAAC,CAAAjC,IAAA,iBAAAW,MACD,WACI,IAAMyB,EAASnB,KAAK6I,YAAa4R,EAAaza,KAAKH,UAAUT,OAAOuH,KAAMa,EAAWxH,KAAKwH,SAC1F,OAAQA,EAASsO,IAAM3U,GACnBqG,EAASwO,IAAM7U,GACfqG,EAASwO,GAAKyE,EAAW1S,OAAS5G,GAClCqG,EAASsO,GAAK2E,EAAW3S,MAAQ3G,CACzC,GAAC,CAAApC,IAAA,YAAAW,MACD,WACI,OAAQM,KAAK4I,YAAc5I,KAAK2I,UAAY3I,KAAKukB,gBACrD,GAAC,CAAAxlB,IAAA,QAAAW,MACD,WAAQ,IACmD8kB,EADnDC,GAAApkB,EAAAA,EAAAA,GACkBL,KAAKH,UAAUqG,UAAUuG,UAAQ,IAAvD,IAAAgY,EAAAlkB,MAAAikB,EAAAC,EAAAjkB,KAAAC,MAAyD,KAAAikB,EAA9C/jB,EAAO6jB,EAAA9kB,MACD,QAAbglB,EAAA/jB,EAAQwY,aAAK,IAAAuL,GAAbA,EAAA7jB,KAAAF,EAAgBX,KACpB,CAAC,OAAAc,GAAA2jB,EAAA1jB,EAAAD,EAAA,SAAA2jB,EAAAzjB,GAAA,CACL,KAAC8Y,CAAA,CA3SgB,GCzCR6K,GAAK1c,EAAAA,EAAAA,IACd,SAAA0c,EAAYnd,EAAUtH,IAAUH,EAAAA,EAAAA,GAAA,KAAA4kB,GAC5B3kB,KAAKwH,SAAWA,EAChBxH,KAAKE,SAAWA,CACpB,I,UCFEkZ,EAAO,GACAwL,EAAQ,WACjB,SAAAA,EAAYC,EAAWC,GAAU,IAAAhlB,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAA6kB,GAC7B5kB,KAAK6kB,UAAYA,EACjB7kB,KAAK8kB,SAAWA,EAChB9kB,KAAK+kB,WAAa,WAEd,IADA,IAAAC,EAAiBllB,EAAK+kB,UAAUrd,SAAxBsO,EAACkP,EAADlP,EAAGE,EAACgP,EAADhP,EAACiP,EAAkDnlB,EAAK+kB,UAAUle,KAAjCmB,EAAKmd,EAALnd,MAAOC,EAAMkd,EAANld,OAAkC+c,EAAahlB,EAAbglB,SAC5EI,EAAI,EAAGA,EAPmB,EAOCA,IAAK,CACrC,IAAMC,EAAaD,EARR,EASXplB,EAAKslB,MAAM9Y,KAAK,IAAIsY,EAAS,IAAIS,EAAAA,GAAUvP,EAAIhO,EAAQsR,EAAO+L,EAAYnP,EAAIjO,EAASqR,GAAQxP,KAAK0b,MAAMJ,EAAI9L,GAAQ+L,GAAard,EAAQsR,EAAMrR,EAASqR,GAAO0L,GACrK,CACAhlB,EAAKylB,UAAW,CACpB,EACAvlB,KAAKwlB,QAAU,GACfxlB,KAAKulB,UAAW,EAChBvlB,KAAKolB,MAAQ,EACjB,CAuCC,OAvCAnd,EAAAA,EAAAA,GAAA2c,EAAA,EAAA7lB,IAAA,SAAAW,MACD,SAAO+lB,GACH,QAAKzlB,KAAK6kB,UAAUa,SAASD,EAAMje,YAG/BxH,KAAKwlB,QAAQhmB,OAASQ,KAAK8kB,UAC3B9kB,KAAKwlB,QAAQlZ,KAAKmZ,IACX,IAENzlB,KAAKulB,UACNvlB,KAAK+kB,aAEF/kB,KAAKolB,MAAMO,MAAK,SAACC,GAAG,OAAKA,EAAIC,OAAOJ,EAAM,KACrD,GAAC,CAAA1mB,IAAA,QAAAW,MACD,SAAMoc,EAAOgK,GACT,IAAM3K,EAAM,GACZ,IAAKW,EAAMiK,WAAW/lB,KAAK6kB,WACvB,MAAO,GACV,IAC2B1kB,EAD3BC,GAAAC,EAAAA,EAAAA,GACeL,KAAKwlB,SAAO,IAA5B,IAAAplB,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAA8B,KAAnBulB,EAAC7lB,EAAAT,OACHoc,EAAM4J,SAASM,EAAExe,YAClBqV,EAAAA,EAAAA,IAAYf,EAAMtU,SAAUwe,EAAExe,UAAYwe,EAAE9lB,SAAS2I,eACnDid,GAASA,EAAME,EAAE9lB,YAGvBib,EAAI7O,KAAK0Z,EAAE9lB,SACf,CAAC,OAAAY,GAAAV,EAAAW,EAAAD,EAAA,SAAAV,EAAAY,GAAA,CACD,GAAIhB,KAAKulB,SAAU,KACahkB,EADbC,GAAAnB,EAAAA,EAAAA,GACGL,KAAKolB,OAAK,IAA5B,IAAA5jB,EAAAjB,MAAAgB,EAAAC,EAAAhB,KAAAC,MAA8B,KAAnBmlB,EAAGrkB,EAAA7B,MACVyb,EAAI7O,KAAIZ,MAARyP,GAAG8K,EAAAA,EAAAA,GAASL,EAAIM,MAAMpK,EAAOgK,IACjC,CAAC,OAAAhlB,GAAAU,EAAAT,EAAAD,EAAA,SAAAU,EAAAR,GAAA,CACL,CACA,OAAOma,CACX,GAAC,CAAApc,IAAA,cAAAW,MACD,SAAY8H,EAAUrG,EAAQ2kB,GAC1B,OAAO9lB,KAAKkmB,MAAM,IAAIC,EAAAA,GAAO3e,EAASsO,EAAGtO,EAASwO,EAAG7U,GAAS2kB,EAClE,GAAC,CAAA/mB,IAAA,iBAAAW,MACD,SAAe8H,EAAUb,EAAMmf,GAC3B,OAAO9lB,KAAKkmB,MAAM,IAAIb,EAAAA,GAAU7d,EAASsO,EAAGtO,EAASwO,EAAGrP,EAAKmB,MAAOnB,EAAKoB,QAAS+d,EACtF,KAAClB,CAAA,CAtDgB,GCKfwB,EAAiB,SAAC3L,GACpB,IAAQ1S,EAAkB0S,EAAlB1S,OAAQD,EAAU2S,EAAV3S,MAChB,OAAO,IAAIud,EAAAA,IADuC,IACjBvd,GADiB,IACEC,EADkB,IACGD,EADH,IACuBC,EACjG,EACase,EAAS,WAClB,SAAAA,EAAY/N,EAAQzY,GAAW,IAAAC,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAAsmB,GAC3BrmB,KAAKsmB,WAAa,WAAkB,QAAAC,EAAAhnB,UAAAC,OAAd0G,EAAS,IAAAmR,MAAAkP,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAATtgB,EAASsgB,GAAAjnB,UAAAinB,GAC3B,IAAK,IAALrP,EAAA,EAAAsP,EAAuBvgB,EAASiR,EAAAsP,EAAAjnB,OAAA2X,IAAE,CAA7B,IAAMjX,EAAQumB,EAAAtP,GACfrX,EAAK4mB,MAAMpa,KAAKpM,EACpB,CACJ,EACAF,KAAK2mB,cAAgB,SAACpjB,EAASqjB,EAAa7G,GAAU,IAAA8G,EAC5CC,EAAgBvjB,EAAQwjB,OAC9B,GAA2B,QAAvBF,EAACtjB,EAAQwjB,OAAOC,eAAO,IAAAH,GAAtBA,EAAwBzgB,OAA7B,CASA,IAAM6gB,EAAgBnnB,EAAKonB,mBAAmBJ,EAAcE,SAAUG,EAAqBL,EAAcpnB,MAAqB0nB,EAAoBN,EAAcO,MAAM3nB,MAA3C,EAA8DonB,EAAcO,MAAM3nB,MAAQynB,EAAoBG,EAAkB1d,KAAK2d,IAAIJ,EAAoBC,GAAqBH,EAAgBL,EAAaY,EAAiB5d,KAAK2d,IAAIznB,EAAK2nB,MAAO3nB,EAAK4nB,QAAO,SAACC,GAAC,OAAKA,EAAE5H,QAAUA,CAAK,IAAEvgB,aACxYN,IAAV6gB,EACAjgB,EAAK8nB,OAASd,EAAcO,MAAM3nB,MAAQunB,EAG1CnnB,EAAK+nB,aAAa5P,IAAI8H,EAAO+G,EAAcO,MAAM3nB,MAAQunB,GAEzDO,EAAiBF,EACjBxnB,EAAKwM,KAAK1C,KAAKke,IAAIR,EAAkBE,QAAiBtoB,EAAWqE,EAASwc,GAErEyH,EAAiBF,GACtBxnB,EAAKioB,eAAeP,EAAiBF,EAAiBvH,EAZ1D,WAPkB7gB,IAAV6gB,EACAjgB,EAAK8nB,OAASd,EAAcO,MAAM3nB,MAE7BonB,EAAcO,OACnBvnB,EAAK+nB,aAAa5P,IAAI8H,EAAO+G,EAAcO,MAAM3nB,MAiB7D,EACAM,KAAKknB,mBAAqB,SAACc,GACvB,IAAMnoB,EAAYC,EAAKmoB,WACvB,IAAKpoB,EAAUT,OAAOkG,UAAY0iB,EAAe5hB,OAC7C,OAF+C,EAInD,IAAMhH,EAASS,EAAUT,OAAOkG,QAASgI,EAAUzN,EAAUsN,OAAOI,WACpE,OAAQnO,EAAO0I,MAAQ1I,EAAO2I,QAAWigB,EAAejgB,OAASigB,EAAelgB,MAAK8B,KAAAC,IAAGyD,EA3C/D,GA4C7B,EACAtN,KAAKkoB,cAAgB,SAAC1gB,EAAUsY,EAAiBC,EAAOoI,GACpD,IACI,IAAIjoB,EAAWJ,EAAK4mB,MAAM0B,MACrBloB,IACDA,EAAW,IAAI4Z,EAASha,EAAKyY,QAASzY,EAAKmoB,aAE/C/nB,EAASkN,KAAKtN,EAAKuoB,QAAS7gB,EAAUsY,EAAiBC,GACvD,IAAIuI,GAAS,EAIb,GAHIH,IACAG,EAASH,EAAYjoB,KAEpBooB,EACD,OAWJ,OATAxoB,EAAKyoB,OAAOjc,KAAKpM,GACjBJ,EAAK0oB,QAAQlc,KAAKpM,GAClBJ,EAAKuoB,UACLvoB,EAAKyY,QAAQ+G,cAAc,gBAAiB,CACxCzf,UAAWC,EAAKmoB,WAChB3O,KAAM,CACFpZ,SAAAA,KAGDA,CACX,CACA,MAAOa,IACHwK,EAAAA,EAAAA,MAAYkd,QAAQ,GAAD9L,OAAIC,EAAAA,GAAW,sBAAAD,OAAqB5b,GAC3D,CACJ,EACAf,KAAK0oB,gBAAkB,SAACC,EAAO5I,EAAOtB,GAClC,IAAMve,EAAWJ,EAAKyoB,OAAOI,GAC7B,IAAKzoB,GAAYA,EAAS6f,QAAUA,EAChC,OAAO,EAEX,IAAM6I,EAAO9oB,EAAK0oB,QAAQK,QAAQ3oB,GAWlC,OAVAJ,EAAKyoB,OAAOO,OAAOH,EADwC,GAE3D7oB,EAAK0oB,QAAQM,OAAOF,EAFuC,GAG3D1oB,EAAS6oB,QAAQtK,GACjB3e,EAAKyY,QAAQ+G,cAAc,kBAAmB,CAC1Czf,UAAWC,EAAKmoB,WAChB3O,KAAM,CACFpZ,SAAAA,KAGRJ,EAAKwmB,WAAWpmB,IACT,CACX,EACAF,KAAKuY,QAAUD,EACftY,KAAKioB,WAAapoB,EAClBG,KAAKqoB,QAAU,EACfroB,KAAKuoB,OAAS,GACdvoB,KAAKwoB,QAAU,GACfxoB,KAAK0mB,MAAQ,GACb1mB,KAAK4nB,OAAS,EACd5nB,KAAK6nB,aAAe,IAAIzP,IACxBpY,KAAKgpB,YAAa,EAClBhpB,KAAKipB,YAAc,EACnBjpB,KAAKkpB,oBAAsB,IAAI7Q,EAAmBC,EAAQzY,GAC1DG,KAAKmpB,qBAAsB,EAC3B,IAAM1O,EAAa5a,EAAUT,OAAOuH,KACpC3G,KAAKopB,SAAW,IAAIxE,EAASwB,EAAe3L,GAzG9B,GA0Gdza,KAAKikB,OAAS,GACdjkB,KAAKyM,SAAW,EACpB,CAmNC,OAnNAxE,EAAAA,EAAAA,GAAAoe,EAAA,EAAAtnB,IAAA,QAAAmJ,IACD,WACI,OAAOlI,KAAKuoB,OAAO/oB,MACvB,GAAC,CAAAT,IAAA,qBAAAW,MACD,WACI,IAC8CS,EADxCN,EAAYG,KAAKioB,WAAY1kB,EAAU1D,EAAUmE,cAAc5D,GAAAC,EAAAA,EAAAA,GAC9CkD,EAAQ8lB,iBAAe,IAA9C,IAAAjpB,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAAgD,KAArCP,EAAQC,EAAAT,MACfM,KAAKspB,YAAYppB,EAASsH,UAAW2W,EAAAA,EAAAA,IAAYje,EAASsH,SAAU3H,EAAUT,OAAOuH,WAAQzH,EAAWgB,EAASqD,QACrH,CAAC,OAAAzC,GAAAV,EAAAW,EAAAD,EAAA,SAAAV,EAAAY,GAAA,CACL,GAAC,CAAAjC,IAAA,cAAAW,MACD,SAAY8H,EAAUsY,EAAiBC,EAAOoI,GAAa,IAAAoB,EACjDC,EAAexpB,KAAKioB,WAAWjkB,cAAckC,UAAU6gB,OAAOM,MAAOA,OAAkBnoB,IAAV6gB,EAAsB/f,KAAK4nB,OAAqC,QAA/B2B,EAAGvpB,KAAK6nB,aAAa3f,IAAI6X,UAAM,IAAAwJ,EAAAA,EAAIvpB,KAAK4nB,OAAQ6B,EAAezpB,KAAKynB,MACxL,GAAIJ,EADsM,EAEtM,GAA0B,WAAtBmC,EAAa5Z,KAAmB,CAChC,IAAqC8Z,EAAgBD,EAAjC,EAA8DpC,EAC9EqC,EAD8B,GAE9B1pB,KAAK+nB,eAAe2B,EAE5B,MACK,GAA0B,SAAtBF,EAAa5Z,MACd6Z,GAAgBpC,EAChB,OAIZ,OAAOrnB,KAAKkoB,cAAc1gB,EAAUsY,EAAiBC,EAAOoI,EAChE,GAAC,CAAAppB,IAAA,QAAAW,MACD,WACIM,KAAKuoB,OAAS,GACdvoB,KAAKwoB,QAAU,GACfxoB,KAAKmpB,qBAAsB,CAC/B,GAAC,CAAApqB,IAAA,UAAAW,MACD,WACIM,KAAKuoB,OAAS,GACdvoB,KAAKwoB,QAAU,GACfxoB,KAAKikB,OAAS,GACdjkB,KAAKyM,SAAW,EACpB,GAAC,CAAA1N,IAAA,OAAAW,MACD,SAAK8I,GACD,IAAM3I,EAAYG,KAAKioB,WAAY7oB,EAASS,EAAUT,OACtDA,EAAOiJ,QACPrI,KAAK2pB,OAAOnhB,GAAO,IACuBjH,EADvBC,GAAAnB,EAAAA,EAAAA,GACMR,EAAUuM,SAAO,IAA1C,IAAA5K,EAAAjB,MAAAgB,EAAAC,EAAAhB,KAAAC,MAA4C,KAA9B8B,GAA8B6G,EAAAA,EAAAA,GAAA7H,EAAA7B,MAAA,GAAxB,GAChBN,EAAOqL,WAAWlI,EAAQiG,EAC9B,CAAC,OAAA1H,GAAAU,EAAAT,EAAAD,EAAA,SAAAU,EAAAR,GAAA,KAC2BmB,EAD3BC,GAAA/B,EAAAA,EAAAA,GACeL,KAAKwoB,SAAO,IAA5B,IAAApmB,EAAA7B,MAAA4B,EAAAC,EAAA5B,KAAAC,MAA8B,CAAlB0B,EAAAzC,MACN+G,KAAK+B,EACX,CAAC,OAAA1H,GAAAsB,EAAArB,EAAAD,EAAA,SAAAsB,EAAApB,GAAA,CACL,GAAC,CAAAjC,IAAA,SAAAW,MACD,SAAOkqB,GACH,OAAO5pB,KAAKuoB,OAAOb,OAAOkC,EAC9B,GAAC,CAAA7qB,IAAA,OAAAW,MACD,SAAKkqB,GACD,OAAO5pB,KAAKuoB,OAAO9X,KAAKmZ,EAC5B,GAAC,CAAA7qB,IAAA,MAAAW,MACD,SAAIipB,GACA,OAAO3oB,KAAKuoB,OAAOI,EACvB,GAAC,CAAA5pB,IAAA,kBAAAW,MACD,SAAgBkQ,GACZ5P,KAAKkpB,oBAAoBrZ,gBAAgBD,EAC7C,GAAC,CAAA7Q,IAAA,OAAAW,MAAA,eAAAgL,GAAAvH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAC,IAAA,IAAAzD,EAAA0D,EAAA6R,EAAAvS,EAAAD,EAAAinB,EAAAtnB,EAAA+e,EAAAwI,EAAA/J,EAAAgK,EAAA7E,EAAA8E,EAAAC,EAAArS,EAAA,OAAAxU,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAG4B,OAFlBlE,EAAYG,KAAKioB,WAAY1kB,EAAU1D,EAAUmE,cACvDhE,KAAKipB,YAAc,EACnBjpB,KAAKgpB,YAAa,EAAMnlB,EAAAE,KAAA,EAClB/D,KAAKyL,cAAa,OACpB2J,GAAU,EAAKvS,GAAAxC,EAAAA,EAAAA,GACMR,EAAUuM,SAAOvI,EAAAC,KAAA,EAAAjB,EAAAtC,IAAA,WAAAqC,EAAAC,EAAArC,KAAAC,KAAE,CAAFoD,EAAAE,KAAA,SAGrC,GAHqC8lB,GAAAzgB,EAAAA,EAAAA,GAAAxG,EAAAlD,MAAA,QACCR,KAD7BqD,EAAMsnB,EAAA,IACLK,0BACP9U,EAAU7S,EAAO2nB,4BAEjB9U,EAAS,CAAFvR,EAAAE,KAAA,gBAAAF,EAAAwC,OAAA,oBAAAxC,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyH,GAAAzH,EAAA,SAAAhB,EAAA9B,EAAA8C,EAAAyH,IAAA,eAAAzH,EAAAC,KAAA,GAAAjB,EAAA7B,IAAA6C,EAAAqV,OAAA,YAKf,GADAlZ,KAAKmqB,sBACA/U,EAAS,CAEV,IAAW2K,KADLuB,EAAmB/d,EAAQ2C,UAAW4jB,EAASxI,EAAiBwI,OAGlE,IADMC,EAAeD,EAAO/J,GACnBmF,EAAIllB,KAAKynB,MAAOuC,EAAI,EAAGA,GAAuB,QAAtBC,EAAGF,EAAahD,cAAM,IAAAkD,OAAA,EAAnBA,EAAqBvqB,QAASwlB,EAAI5D,EAAiByF,OAAOrnB,MAAOwlB,IAAK8E,IACtGhqB,KAAKspB,iBAAYpqB,EAAW6qB,EAAchK,GAGlD,IAASmF,EAAIllB,KAAKynB,MAAOvC,EAAI5D,EAAiByF,OAAOrnB,MAAOwlB,IACxDllB,KAAKspB,aAEb,CAAC,yBAAAzlB,EAAAuB,OAAA,GAAA9B,EAAA,yBACJ,yBAAAoH,EAAAgB,MAAA,KAAAnM,UAAA,EA5BA,IA4BA,CAAAR,IAAA,cAAAW,MAAA,eAAA0qB,GAAAjnB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAwC,IAAA,IAAAhG,EAAAqL,EAAAD,EAAAof,EAAA,OAAAjnB,EAAAA,EAAAA,KAAAQ,MAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,WACQ/D,KAAKmpB,oBAAqB,CAAFljB,EAAAlC,KAAA,eAAAkC,EAAAI,OAAA,iBAGK,OAA3BxG,EAAYG,KAAKioB,WAAUhiB,EAAAlC,KAAA,EACb/D,KAAKuY,QAAQ+R,UAAUzqB,GAAW,GAAK,OAAhD,OAAXG,KAAKikB,OAAMhe,EAAA+S,KAAA/S,EAAAlC,KAAG,EACQ/D,KAAKuY,QAAQgS,YAAY1qB,GAAW,GAAK,OAAlD,OAAbG,KAAKyM,SAAQxG,EAAA+S,KAAA/S,EAAAlC,KAAG,GACV/D,KAAKkpB,oBAAoB9b,OAAM,QAAAlC,GAAA7K,EAAAA,EAAAA,GACLR,EAAU2qB,gBAAc,IAAxD,IAAAtf,EAAA3K,MAAA0K,EAAAC,EAAA1K,KAAAC,MAA0D4pB,GAAAjhB,EAAAA,EAAAA,GAAA6B,EAAAvL,MAAA,GAA/B2qB,EAAA,GACTjd,KAAKvN,EACtB,OAAAiB,GAAAoK,EAAAnK,EAAAD,EAAA,SAAAoK,EAAAlK,GAAA,0BAAAiF,EAAAb,OAAA,GAAAS,EAAA,UACJ,yBAAAukB,EAAA1e,MAAA,KAAAnM,UAAA,EAZA,IAYA,CAAAR,IAAA,OAAAW,MACD,SAAK+qB,EAAItb,EAAO2Q,EAAiBC,GAC7B,IAAK,IAAImF,EAAI,EAAGA,EAAIuF,EAAIvF,IACpBllB,KAAKspB,YAAiB,OAALna,QAAK,IAALA,OAAK,EAALA,EAAO3H,SAAUsY,EAAiBC,EAE3D,GAAC,CAAAhhB,IAAA,SAAAW,MAAA,eAAAgrB,GAAAvnB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAsH,IAAA,OAAAvH,EAAAA,EAAAA,KAAAQ,MAAA,SAAAiH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,OACiB,OAAb/D,KAAKqI,QAAQwC,EAAA9G,KAAA,EACP/D,KAAKoN,OAAM,OACjBpN,KAAKyG,KAAK,CAAE/G,MAAO,EAAGb,OAAQ,IAAK,wBAAAgM,EAAAzF,OAAA,GAAAuF,EAAA,UACtC,yBAAA+f,EAAAhf,MAAA,KAAAnM,UAAA,EALA,IAKA,CAAAR,IAAA,SAAAW,MACD,SAAOQ,EAAU6f,EAAOtB,GACpBze,KAAK2qB,SAAS3qB,KAAKuoB,OAAOM,QAAQ3oB,QAAWhB,EAAW6gB,EAAOtB,EACnE,GAAC,CAAA1f,IAAA,WAAAW,MACD,SAASipB,GAA0D,IAAnDiC,EAAQrrB,UAAAC,OAAA,QAAAN,IAAAK,UAAA,GAAAA,UAAA,GA9NoC,EA8NVwgB,EAAKxgB,UAAAC,OAAA,EAAAD,UAAA,QAAAL,EAAEuf,EAAQlf,UAAAC,OAAA,EAAAD,UAAA,QAAAL,EAE7D,KAAIypB,EADa,GACOA,EAAQ3oB,KAAKynB,OAIrC,IADA,IAAIoD,EAAU,EACL3F,EAAIyD,EAAOkC,EAAUD,GAAY1F,EAAIllB,KAAKynB,MAAOvC,IAClDllB,KAAK0oB,gBAAgBxD,IAAKnF,EAAOtB,IACjCoM,GAGZ,GAAC,CAAA9rB,IAAA,iBAAAW,MACD,SAAekrB,EAAU7K,GAErB/f,KAAK2qB,SADgB,EACOC,EAAU7K,EAC1C,GAAC,CAAAhhB,IAAA,aAAAW,MACD,WACI,IAAM6D,EAAUvD,KAAKioB,WAAWjkB,cAAe8lB,EAASvmB,EAAQ2C,UAAU4jB,OAC1E,IAAK,IAAM/J,KAAS+J,EAChB9pB,KAAK2mB,cAAcmD,EAAO/J,GAFkE,EAE7CA,GAEnD/f,KAAK2mB,cAAcpjB,EAAQ2C,UAAW3C,EAAQ8lB,gBAAgB7pB,OAClE,GAAC,CAAAT,IAAA,gBAAAW,MACD,SAAc+H,GACVzH,KAAKipB,YAAcxhB,EACnBzH,KAAKgpB,WAAahpB,KAAKgpB,YAAchpB,KAAKipB,YAAcxhB,CAC5D,GAAC,CAAA1I,IAAA,kBAAAW,MACD,SAAgBb,GACZmB,KAAK8qB,cAAgBjsB,CACzB,GAAC,CAAAE,IAAA,SAAAW,MACD,SAAO8I,GACH,IAAM3I,EAAYG,KAAKioB,WAAY8C,EAAoB,IAAIC,IAC3DhrB,KAAKopB,SAAW,IAAIxE,EAASwB,EAAevmB,EAAUT,OAAOuH,MA9P/C,GA8PqE,IAC3BuF,EAD2BC,GAAA9L,EAAAA,EAAAA,GACnDR,EAAU2qB,gBAAc,IAAxD,IAAAre,EAAA5L,MAAA2L,EAAAC,EAAA3L,KAAAC,MAA0D,EAAA2I,EAAAA,EAAAA,GAAA8C,EAAAxM,MAAA,GAA/B,GACTiqB,QAClB,CAAC,OAAA7oB,GAAAqL,EAAApL,EAAAD,EAAA,SAAAqL,EAAAnL,GAAA,KACyCuL,EADzCC,GAAAnM,EAAAA,EAAAA,GACwBR,EAAUuM,SAAO,IAA1C,IAAAI,EAAAjM,MAAAgM,EAAAC,EAAAhM,KAAAC,MAA4C,KAAAwqB,EAA9B1oB,GAA8B6G,EAAAA,EAAAA,GAAAmD,EAAA7M,MAAA,GAAxB,GACH,QAAburB,EAAA1oB,EAAOonB,cAAM,IAAAsB,GAAbA,EAAApqB,KAAA0B,EAAgBiG,EACpB,CAAC,OAAA1H,GAAA0L,EAAAzL,EAAAD,EAAA,SAAA0L,EAAAxL,GAAA,CACD,IACkCwjB,EAD5B0G,EAAelrB,KAAK8qB,cAAcrG,GAAApkB,EAAAA,EAAAA,GACjBL,KAAKuoB,QAAM,IAAlC,IAAA9D,EAAAlkB,MAAAikB,EAAAC,EAAAjkB,KAAAC,MAAoC,KAAzBP,EAAQskB,EAAA9kB,MACXwrB,IAAiBhrB,EAASkhB,qBAC1BlhB,EAASsH,SAASsO,GAAKoV,EAAapjB,MACpC5H,EAASsH,SAASwO,GAAKkV,EAAanjB,OACpC7H,EAAS+d,gBAAgBnI,GAAKoV,EAAapjB,MAC3C5H,EAAS+d,gBAAgBjI,GAAKkV,EAAanjB,QAE/C7H,EAASkhB,oBAAqB,EAC9BphB,KAAKkpB,oBAAoB/P,MAAMjZ,GAAU,IACOirB,EADPC,GAAA/qB,EAAAA,EAAAA,GAChBL,KAAKioB,WAAW7b,SAAO,IAAhD,IAAAgf,EAAA7qB,MAAA4qB,EAAAC,EAAA5qB,KAAAC,MAAkD,KAAA4qB,EAApC9oB,GAAoC6G,EAAAA,EAAAA,GAAA+hB,EAAAzrB,MAAA,GAA9B,GAChB,GAAIQ,EAAS0I,UACT,MAEiB,QAArByiB,EAAA9oB,EAAO+oB,sBAAc,IAAAD,GAArBA,EAAAxqB,KAAA0B,EAAwBrC,EAAUsI,EACtC,CAAC,OAAA1H,GAAAsqB,EAAArqB,EAAAD,EAAA,SAAAsqB,EAAApqB,GAAA,KAC8BuqB,EAD9BC,GAAAnrB,EAAAA,EAAAA,GACmBL,KAAKikB,QAAM,IAA/B,IAAAuH,EAAAjrB,MAAAgrB,EAAAC,EAAAhrB,KAAAC,MAAiC,KAAtB0jB,EAAKoH,EAAA7rB,MACRykB,EAAMvL,UAAU1Y,IAChBikB,EAAMhe,KAAKjG,EAAUsI,EAE7B,CAAC,OAAA1H,GAAA0qB,EAAAzqB,EAAAD,EAAA,SAAA0qB,EAAAxqB,GAAA,CACGd,EAAS0I,UACTmiB,EAAkBxc,IAAIrO,GAG1BF,KAAKopB,SAASvD,OAAO,IAAIlB,EAAMzkB,EAASie,cAAeje,GAC3D,CAAC,OAAAY,GAAA2jB,EAAA1jB,EAAAD,EAAA,SAAA2jB,EAAAzjB,GAAA,CACD,GAAI+pB,EAAkBpkB,KAAM,CACxB,IAAM8kB,EAAc,SAACzF,GAAC,OAAM+E,EAAkBW,IAAI1F,EAAE,EACpDhmB,KAAKuoB,OAASvoB,KAAK0nB,OAAO+D,GAC1BzrB,KAAKwoB,QAAUxoB,KAAKwoB,QAAQd,OAAO+D,GAAa,IACRE,EADQC,GAAAvrB,EAAAA,EAAAA,GACzB0qB,GAAiB,IAAxC,IAAAa,EAAArrB,MAAAorB,EAAAC,EAAAprB,KAAAC,MAA0C,KAA/BP,EAAQyrB,EAAAjsB,MACfM,KAAKuY,QAAQ+G,cAAc,kBAAmB,CAC1Czf,UAAWG,KAAKioB,WAChB3O,KAAM,CACFpZ,SAAAA,IAGZ,CAAC,OAAAY,GAAA8qB,EAAA7qB,EAAAD,EAAA,SAAA8qB,EAAA5qB,GAAA,CACDhB,KAAKsmB,WAAU5a,MAAf1L,MAAIimB,EAAAA,EAAAA,GAAe8E,GACvB,CACA/qB,KAAKkpB,oBAAoB2C,iBAAiBrjB,GAAO,IACfsjB,EADeC,GAAA1rB,EAAAA,EAAAA,GAC1BL,KAAKuoB,QAAM,IAAlC,IAAAwD,EAAAxrB,MAAAurB,EAAAC,EAAAvrB,KAAAC,MAAoC,KACGurB,EAD5B9rB,EAAQ4rB,EAAApsB,MAAAusB,GAAA5rB,EAAAA,EAAAA,GACOL,KAAKyM,UAAQ,IAAnC,IAAAwf,EAAA1rB,MAAAyrB,EAAAC,EAAAzrB,KAAAC,MAAqC,CAAnBurB,EAAAtsB,MACNiqB,OAAOzpB,EAAUsI,EAC7B,CAAC,OAAA1H,GAAAmrB,EAAAlrB,EAAAD,EAAA,SAAAmrB,EAAAjrB,GAAA,CACId,EAAS0I,WAAc1I,EAASyI,UACjC3I,KAAKkpB,oBAAoBgD,kBAAkBhsB,EAAUsI,EAE7D,CAAC,OAAA1H,GAAAirB,EAAAhrB,EAAAD,EAAA,SAAAirB,EAAA/qB,GAAA,CAED,UADOhB,KAAK8qB,cACR9qB,KAAKgpB,WAAY,CACjB,IAAMmD,EAASnsB,KAAKwoB,QACpB2D,EAAOC,MAAK,SAAChoB,EAAGioB,GAAC,OAAKA,EAAE7kB,SAASiY,EAAIrb,EAAEoD,SAASiY,GAAKrb,EAAEyb,GAAKwM,EAAExM,EAAE,IAEhE7f,KAAKipB,YAAckD,EAAOA,EAAO3sB,OADZ,GACmCgI,SAASiY,EACjEzf,KAAKgpB,YAAa,CACtB,CACJ,KAAC3C,CAAA,CA1TiB,GCTTiG,EAAM,WACf,SAAAA,EAAYzsB,IAAWE,EAAAA,EAAAA,GAAA,KAAAusB,GACnBtsB,KAAKH,UAAYA,EACjBG,KAAKuN,WAJQ,EAKbvN,KAAKusB,aALiC,CAM1C,CAwBC,OAxBAtkB,EAAAA,EAAAA,GAAAqkB,EAAA,EAAAvtB,IAAA,OAAAW,MACD,WACI,IAAMG,EAAYG,KAAKH,UAAW0D,EAAU1D,EAAUmE,cACtDhE,KAAKuN,YAAchK,EAAQipB,eAAgBC,EAAAA,EAAAA,MAT9B,EASuD/Y,OAAOgZ,iBAC3E1sB,KAAKusB,aAViC,EAWtC,IAAMI,EAAQ3sB,KAAKuN,WAAYnO,EAASS,EAAUT,OAClD,GAAIA,EAAOkG,QAAS,CAChB,IAAMA,EAAUlG,EAAOkG,QACvBlG,EAAOuH,KAAKmB,MAAQxC,EAAQ2H,YAAc0f,EAC1CvtB,EAAOuH,KAAKoB,OAASzC,EAAQ0H,aAAe2f,CAChD,CACA,IAAMzmB,EAAY3C,EAAQ2C,UAAWqV,EAAcrV,EAAUC,KAC7DnG,KAAK4sB,UAAWlR,EAAAA,EAAAA,IAAcH,EAAYsR,QAAQD,UAAYD,EAC9D3sB,KAAK8sB,oBAAqBpR,EAAAA,EAAAA,IAAcxV,EAAUS,KAAKomB,UAAU5Q,OAASwQ,CAC9E,GAAC,CAAA5tB,IAAA,eAAAW,MACD,SAAaQ,GACT,IAAMqD,EAAUrD,EAASqD,QAASopB,EAAQ3sB,KAAKuN,WAAYgO,EAAchY,EAAQ4C,KAAM6mB,EAAezR,EAAY0R,SAAUC,EAAQhtB,EAASiN,OAC7I+f,EAAMC,WAAYzR,EAAAA,EAAAA,IAAcH,EAAY6R,OAAST,EACrDO,EAAMG,WAAY3R,EAAAA,EAAAA,IAAcH,EAAYY,OAASwQ,EACrDO,EAAMJ,oBAAqBpR,EAAAA,EAAAA,IAAcnY,EAAQoD,KAAKomB,UAAU5Q,OAASwQ,EACzE,IAAMxL,EAAc+L,EAAM/L,YAC1BA,EAAY/D,gBAAyCle,IAA5B8tB,EAAa5P,WAA2B4P,EAAa5P,WAAauP,OAAQztB,EACnGiiB,EAAY9D,cAAqCne,IAA1B8tB,EAAa3P,SAAyB2P,EAAa3P,SAAWsP,OAAQztB,EAC7FguB,EAAMN,UAAWlR,EAAAA,EAAAA,IAAcH,EAAYsR,QAAQD,UAAYD,CACnE,KAACL,CAAA,CA7Bc,GCMnB,SAASgB,EAAWztB,GAChB,OAAOA,IAAcA,EAAU+I,SACnC,CAQA,SAAS2kB,EAAqBjV,EAAQzY,GACa,IAA/C,IAAM0D,EAAU,IAAIiqB,EAAAA,EAAQlV,EAAQzY,GAAW0mB,EAAAhnB,UAAAC,OADCiuB,EAAgB,IAAApW,MAAAkP,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAhBiH,EAAgBjH,EAAA,GAAAjnB,UAAAinB,GAGhE,OADAkH,EAAAA,EAAWhiB,WAAC,EAAD,CAACnI,GAAOoZ,OAAK8Q,IACjBlqB,CACX,CACO,IAAMoqB,EAAS,WAClB,SAAAA,EAAYrV,EAAQuH,EAAI+N,GAAe,IAAA9tB,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAA4tB,GACnC3tB,KAAK6tB,qBAAuB,SAACjZ,GACzB,GAAK0Y,EAAWxtB,IAAUA,EAAKkE,cAAc8pB,uBAA7C,CAEC,IAC0B3tB,EAD1BC,GAAAC,EAAAA,EAAAA,GACmBuU,GAAO,IAA3B,IAAAxU,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAA6B,KAAlBstB,EAAK5tB,EAAAT,MACRquB,EAAMlZ,SAAW/U,EAAKoP,cAAc5J,UAGpCyoB,EAAMC,eACDluB,EAAKsR,OAGVtR,EAAKoR,QAEb,CAAC,OAAApQ,GAAAV,EAAAW,EAAAD,EAAA,SAAAV,EAAAY,GAAA,CAXD,CAYJ,EACAhB,KAAKiuB,WAAa,SAACC,GACf,IAAI,IAAAC,EACA,IAAKruB,EAAKsuB,cACkBlvB,IAAxBY,EAAKuuB,gBACLH,EAAYpuB,EAAKuuB,eAAiBzc,EAAAA,GAAwB9R,EAAKwuB,SAE/D,YADAxuB,EAAK2G,MAAK,GAGK,QAAnB0nB,EAAAruB,EAAKuuB,sBAAc,IAAAF,IAAnBruB,EAAKuuB,eAAmBH,GACxB,IAAM1lB,EAtCtB,SAAmB9I,GACf,MAAO,CACHA,MAAAA,EACAb,OAH+CU,UAAAC,OAAA,QAAAN,IAAAK,UAAA,IAAAA,UAAA,GADpC,IACeA,UAAAC,OAAA,QAAAN,IAAAK,UAAA,GAAAA,UAAA,GADf,OAI4CG,EAASkS,EAAAA,GAExE,CAiC8B2c,CAAUL,EAAYpuB,EAAKuuB,eAAgBvuB,EAAKwuB,SAAUxuB,EAAKsuB,SAG7E,GAFAtuB,EAAK0uB,YAAYhmB,EAAM9I,OACvBI,EAAKuuB,eAAiBH,EAClB1lB,EAAM9I,MAAQkS,EAAAA,GAEd,YADA9R,EAAK2G,MAAK,GAId,GADA3G,EAAKoG,UAAUO,KAAK+B,IACf1I,EAAK2uB,QAEN,YADA3uB,EAAKipB,UAGLjpB,EAAKqR,iBACLrR,EAAK2G,MAAK,EAElB,CACA,MAAO1F,IACHwK,EAAAA,EAAAA,MAAYrG,MAAM,GAADyX,OAAIC,EAAAA,GAAW,sBAAsB7b,EAC1D,CACJ,EACAf,KAAKuY,QAAUD,EACftY,KAAK6f,GAAK6O,OAAO7O,GACjB7f,KAAKsuB,SAAW,IAChBtuB,KAAKouB,SAAU,EACfpuB,KAAK2uB,OAAS,EACd3uB,KAAK4uB,UAAY,EACjB5uB,KAAK6uB,UAAY,EACjB7uB,KAAK8uB,aAAc,EACnB9uB,KAAK0N,SAAU,EACf1N,KAAK4I,WAAY,EACjB5I,KAAK+uB,SAAU,EACf/uB,KAAKquB,eAAiB,EACtBruB,KAAKge,QAAU,IACfhe,KAAKiR,YAAa,EAClBjR,KAAKgvB,eAAiBpB,EACtB5tB,KAAKivB,sBAAwBrB,EAC7B5tB,KAAKmN,OAAS,IAAImf,EAAOtsB,MACzBA,KAAKZ,OAAS,IAAIQ,EAAOI,MACzBA,KAAKkG,UAAY,IAAImgB,EAAUrmB,KAAKuY,QAASvY,MAC7CA,KAAKwqB,eAAiB,IAAIpS,IAC1BpY,KAAKkP,cAAgB,CACjBC,MAAO,CACH6F,UAAU,EACVG,QAAQ,IAGhBnV,KAAKoM,QAAU,IAAIgM,IACnBpY,KAAKyjB,cAAgB,IAAIrL,IACzBpY,KAAKgf,aAAe,IAAI5G,IACxBpY,KAAKkvB,SAAW3B,EAAqBvtB,KAAKuY,QAASvY,MACnDA,KAAKgE,cAAgBupB,EAAqBvtB,KAAKuY,QAASvY,MACxDA,KAAKmvB,gBAAkB,IAAIrgB,EAAe9O,MAC1CA,KAAKovB,uBAAwBC,EAAAA,EAAAA,KAAyB,SAACza,GAAO,OAAK9U,EAAK+tB,qBAAqBjZ,EAAQ,IACrG5U,KAAKuY,QAAQ+G,cAAc,iBAAkB,CAAEzf,UAAWG,MAC9D,CAoVC,OApVAiI,EAAAA,EAAAA,GAAA0lB,EAAA,EAAA5uB,IAAA,kBAAAmJ,IACD,WACI,OAAQlI,KAAK+uB,UAAY/uB,KAAKiR,YAAcqc,EAAWttB,KAC3D,GAAC,CAAAjB,IAAA,UAAAmJ,IACD,WACI,OAAOlI,KAAKkvB,QAChB,GAAC,CAAAnwB,IAAA,gBAAAmJ,IACD,WACI,OAAOlI,KAAKgvB,cAChB,GAAC,CAAAjwB,IAAA,kBAAAW,MACD,SAAgB4H,GAAU,IAAAa,EAAA,KACtB,GAAKmlB,EAAWttB,MAAhB,CAGA,IAAMsvB,EAAKtvB,KAAKkP,cAAc5J,QAC9B,GAAKgqB,EAAL,CAGA,IAAMC,EAAsB,SAACxuB,EAAG0U,EAAKtU,GACjC,GAAKmsB,EAAWnlB,GAAhB,CAGA,IAAMmF,EAAUnF,EAAKgF,OAAOI,WAAYiiB,EAAY,CAChD1Z,EAAGL,EAAIK,EAAIxI,EACX0I,EAAGP,EAAIO,EAAI1I,GACZpH,EAAYiC,EAAKjC,UAAUkjB,SAASqG,YAAYD,EAAWruB,EAASmM,GACvEhG,EAASvG,EAAGmF,EALZ,CAMJ,EAsDIwpB,GAAU,EAAOC,GAAa,EAClCL,EAAGvqB,iBAAiB,SAtDC,SAAChE,GAClB,GAAKusB,EAAWnlB,GAAhB,CAGA,IAAMwN,EAAa5U,EAAG0U,EAAM,CACxBK,EAAGH,EAAWY,SAAWZ,EAAWI,QACpCC,EAAGL,EAAWa,SAAWb,EAAWM,SAExCsZ,EAAoBxuB,EAAG0U,EADX,EAJZ,CAMJ,IA8CA6Z,EAAGvqB,iBAAiB,cA7CM,WACjBuoB,EAAWnlB,KAGhBunB,GAAU,EACVC,GAAa,EACjB,IAwCAL,EAAGvqB,iBAAiB,aAvCK,WAChBuoB,EAAWnlB,KAGhBwnB,GAAa,EACjB,IAmCAL,EAAGvqB,iBAAiB,YAlCI,SAAChE,GACrB,GAAKusB,EAAWnlB,GAAhB,CAGA,GAAIunB,IAAYC,EAAY,CACxB,IAAM5Y,EAAahW,EAEfiW,EAAYD,EAAWE,QAAQF,EAAWE,QAAQzX,OADjC,GAErB,IAAKwX,KACDA,EAAYD,EAAWQ,eAAeR,EAAWQ,eAAe/X,OAH/C,IAKb,OAGR,IAAM8F,EAAU6C,EAAK/I,OAAOkG,QAASgR,EAAahR,EAAUA,EAAQuQ,6BAA0B3W,EAA8BuW,EAAM,CAC9HK,EAAGkB,EAAUjB,SAAWO,EAAaA,EAAWzO,KADqE,GAErHmO,EAAGgB,EAAUf,SAAWK,EAAaA,EAAW1O,IAFqE,IAIzH2nB,EAAoBxuB,EAAG0U,EAAK7L,KAAKgmB,IAAI5Y,EAAU6Y,QAAS7Y,EAAU8Y,SACtE,CACAJ,GAAU,EACVC,GAAa,CAlBb,CAmBJ,IAaAL,EAAGvqB,iBAAiB,eAZO,WAClBuoB,EAAWnlB,KAGhBunB,GAAU,EACVC,GAAa,EACjB,GA/DA,CAJA,CA0EJ,GAAC,CAAA5wB,IAAA,cAAAW,MACD,SAAYA,GACRM,KAAK6uB,WAAanvB,CACtB,GAAC,CAAAX,IAAA,UAAAW,MACD,SAAQX,EAAK8jB,GAA6B,IAAlBpE,EAAQlf,UAAAC,OAAA,QAAAN,IAAAK,UAAA,IAAAA,UAAA,GAC5B,SAAK+tB,EAAWttB,QAAWye,GAAYze,KAAKwqB,eAAekB,IAAI3sB,MAG/DiB,KAAKwqB,eAAevS,IAAIlZ,EAAK8jB,IACtB,EACX,GAAC,CAAA9jB,IAAA,QAAAW,MACD,WACI,OAAQM,KAAK4uB,WAAa5uB,KAAK6uB,WAAa7uB,KAAK4uB,SACrD,GAAC,CAAA7vB,IAAA,UAAAW,MACD,WAAU,IAAAgJ,EAAA,KACN,GAAK4kB,EAAWttB,MAAhB,CAGAA,KAAKoF,OACLpF,KAAKkG,UAAU6iB,UACf/oB,KAAKZ,OAAO2pB,UAAU,IAC2BxnB,EAD3BC,GAAAnB,EAAAA,EAAAA,GACSL,KAAKyjB,eAAa,IAAjD,IAAAjiB,EAAAjB,MAAAgB,EAAAC,EAAAhB,KAAAC,MAAmD,KAAAsvB,EAArCvM,GAAqCpa,EAAAA,EAAAA,GAAA7H,EAAA7B,MAAA,GAAzB,GACF,QAApBqwB,EAAAvM,EAAauF,eAAO,IAAAgH,GAApBA,EAAAlvB,KAAA2iB,EAAuBxjB,KAC3B,CAAC,OAAAc,GAAAU,EAAAT,EAAAD,EAAA,SAAAU,EAAAR,GAAA,KAC8CmB,EAD9CC,GAAA/B,EAAAA,EAAAA,GAC6BL,KAAKgf,cAAY,IAA/C,IAAA5c,EAAA7B,MAAA4B,EAAAC,EAAA5B,KAAAC,MAAiD,KAAAuvB,EAAnCjR,GAAmC3V,EAAAA,EAAAA,GAAAjH,EAAAzC,MAAA,GAAxB,GACF,QAAnBswB,EAAAjR,EAAYgK,eAAO,IAAAiH,GAAnBA,EAAAnvB,KAAAke,EAAsB/e,KAC1B,CAAC,OAAAc,GAAAsB,EAAArB,EAAAD,EAAA,SAAAsB,EAAApB,GAAA,KAC0C4B,EAD1CC,GAAAxC,EAAAA,EAAAA,GACiBL,KAAKyjB,cAAcwM,QAAM,IAA3C,IAAAptB,EAAAtC,MAAAqC,EAAAC,EAAArC,KAAAC,MAA6C,KAAlC1B,EAAG6D,EAAAlD,MACVM,KAAKyjB,cAAchM,OAAO1Y,EAC9B,CAAC,OAAA+B,GAAA+B,EAAA9B,EAAAD,EAAA,SAAA+B,EAAA7B,GAAA,KACyCiK,EADzCC,GAAA7K,EAAAA,EAAAA,GACiBL,KAAKgf,aAAaiR,QAAM,IAA1C,IAAA/kB,EAAA3K,MAAA0K,EAAAC,EAAA1K,KAAAC,MAA4C,KAAjC1B,EAAGkM,EAAAvL,MACVM,KAAKgf,aAAavH,OAAO1Y,EAC7B,CAAC,OAAA+B,GAAAoK,EAAAnK,EAAAD,EAAA,SAAAoK,EAAAlK,GAAA,CACDhB,KAAKuY,QAAQ2X,aAAalwB,MAC1BA,KAAK4I,WAAY,EACjB,IAAMunB,EAAUnwB,KAAKuY,QAAQ6X,MAAOC,EAAMF,EAAQG,WAAU,SAAC3I,GAAC,OAAKA,IAAMjf,CAAI,IAC7E,GAAI2nB,GADuF,EACtE,CAEjBF,EAAQrH,OAAOuH,EADK,EAExB,CACArwB,KAAKuY,QAAQ+G,cAAc,qBAAsB,CAAEzf,UAAWG,MAvB9D,CAwBJ,GAAC,CAAAjB,IAAA,OAAAW,MACD,SAAK6wB,GAAO,IAAA3lB,EAAA,KACR,GAAK0iB,EAAWttB,MAAhB,CAGA,IAAIwwB,EAAcD,EAQlBvwB,KAAKywB,oBAAsBC,uBAAsB,SAACxC,GAAS,OAP7C,SAACA,GACPsC,IACA5lB,EAAKyjB,oBAAiBnvB,EACtBsxB,GAAc,GAElB5lB,EAAKqjB,WAAWC,EACpB,CACgEyC,CAAMzC,EAAU,GAThF,CAUJ,GAAC,CAAAnvB,IAAA,SAAAW,MAAA,eAAAkxB,GAAAztB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAC,EAAa8H,GAAI,IAAA7H,EAAA4I,EAAAD,EAAA2kB,EAAAtuB,EAAA4Y,EAAA2V,EAAAvxB,UAAA,OAAA6D,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAER,EAAOutB,EAAAtxB,OAAA,QAAAN,IAAA4xB,EAAA,GAAAA,EAAA,GAAG,CAAC,EAAC3kB,GAAA9L,EAAAA,EAAAA,GACFL,KAAKoM,SAAOvI,EAAAC,KAAA,EAAAqI,EAAA5L,IAAA,WAAA2L,EAAAC,EAAA3L,KAAAC,KAAE,CAAFoD,EAAAE,KAAA,SAAjB,GAAiB8sB,GAAAznB,EAAAA,EAAAA,GAAA8C,EAAAxM,MAAA,IAAvB6C,EAAMsuB,EAAA,IACJE,OAAQ,CAAFltB,EAAAE,KAAA,eAAAF,EAAAwC,OAAA,6BAAAxC,EAAAE,KAAA,GAGAxB,EAAOwuB,OAAO3lB,EAAM7H,GAAQ,QAArC,IAAH4X,EAAGtX,EAAAmV,MACAgY,UAAW,CAAFntB,EAAAE,KAAA,gBAAAF,EAAAwC,OAAA,8BAAAxC,EAAAwC,OAAA,SAGX8U,EAAI8V,MAAI,QAAAptB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyH,GAAAzH,EAAA,SAAAsI,EAAApL,EAAA8C,EAAAyH,IAAA,eAAAzH,EAAAC,KAAA,GAAAqI,EAAAnL,IAAA6C,EAAAqV,OAAA,aAEnB3N,EAAAA,EAAAA,MAAYrG,MAAM,GAADyX,OAAIC,EAAAA,GAAW,+BAAAD,OAA8BvR,EAAI,eAAc,yBAAAvH,EAAAuB,OAAA,GAAA9B,EAAA,yBACnF,gBAAA4tB,GAAA,OAAAN,EAAAllB,MAAA,KAAAnM,UAAA,EAbA,IAaA,CAAAR,IAAA,kBAAAW,MACD,SAAgBkQ,GACZ,GAAK0d,EAAWttB,MAAhB,CAGAA,KAAKkG,UAAU2J,gBAAgBD,GAAM,IACArD,EADAC,GAAAnM,EAAAA,EAAAA,GACZL,KAAKoM,SAAO,IAArC,IAAAI,EAAAjM,MAAAgM,EAAAC,EAAAhM,KAAAC,MAAuC,KAAA0wB,EAAzB5uB,GAAyB6G,EAAAA,EAAAA,GAAAmD,EAAA7M,MAAA,GAAnB,GACM,QAAtByxB,EAAA5uB,EAAOsN,uBAAe,IAAAshB,GAAtBA,EAAAtwB,KAAA0B,EAAyBqN,EAC7B,CAAC,OAAA9O,GAAA0L,EAAAzL,EAAAD,EAAA,SAAA0L,EAAAxL,GAAA,CAJD,CAKJ,GAAC,CAAAjC,IAAA,OAAAW,MAAA,eAAAgL,GAAAvH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAwC,IAAA,IAAAurB,EAAA3M,EAAAD,EAAApZ,EAAAimB,EAAAC,EAAA1F,EAAAD,EAAA4F,EAAAC,EAAAC,EAAA1F,EAAAD,EAAA4F,EAAA7R,EAAAtd,EAAA6oB,EAAAD,EAAAwG,EAAAC,EAAAC,EAAArG,EAAAD,EAAAuG,EAAAC,EAAAC,EAAA/F,EAAAD,EAAAiG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAApvB,EAAAA,EAAAA,KAAAQ,MAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,UACSupB,EAAWttB,MAAO,CAAFiG,EAAAlC,KAAA,eAAAkC,EAAAI,OAAA,iBAGf+qB,EAAUpxB,KAAKuY,QAAQka,sBAAqBhO,GAAApkB,EAAAA,EAAAA,GAC/B+wB,GAAO,IAA1B,IAAA3M,EAAAlkB,MAAAikB,EAAAC,EAAAjkB,KAAAC,MAAW2K,EAAIoZ,EAAA9kB,OACL2xB,EAASrxB,KAAKuY,QAAQmL,gBAAgBtY,KAExCpL,KAAKyjB,cAAcxL,IAAI7M,EAAMimB,EAEpC,OAAAvwB,GAAA2jB,EAAA1jB,EAAAD,EAAA,SAAA2jB,EAAAzjB,GAAA,CACKswB,EAAStxB,KAAKuY,QAAQma,qBAAoB9G,GAAAvrB,EAAAA,EAAAA,GAC7BixB,GAAM,IAAzB,IAAA1F,EAAArrB,MAAAorB,EAAAC,EAAAprB,KAAAC,MAAW2K,EAAIugB,EAAAjsB,OACL2xB,EAASrxB,KAAKuY,QAAQqL,eAAexY,KAEvCpL,KAAKgf,aAAa/G,IAAI7M,EAAMimB,EAEnC,OAAAvwB,GAAA8qB,EAAA7qB,EAAAD,EAAA,SAAA8qB,EAAA5qB,GAAA,QAAAiF,EAAAlC,KAAA,GACK/D,KAAKkG,UAAUuF,cAAa,QAE2C,OAD7EzL,KAAKkvB,SAAW3B,EAAqBvtB,KAAKuY,QAASvY,KAAMA,KAAKivB,sBAAuBjvB,KAAK4tB,eAC1F5tB,KAAKgE,cAAgBupB,EAAqBvtB,KAAKuY,QAASvY,KAAMA,KAAKkvB,UAAUjpB,EAAAlC,KAAA,GAC9C/D,KAAKuY,QAAQoa,oBAAoB3yB,MAAK,QAA/DyxB,EAAgBxrB,EAAA+S,KAAA+S,GAAA1rB,EAAAA,EAAAA,GACKoxB,GAAgB,IAA3C,IAAA1F,EAAAxrB,MAAAurB,EAAAC,EAAAvrB,KAAAC,MAA6CixB,GAAAtoB,EAAAA,EAAAA,GAAA0iB,EAAApsB,MAAA,GAAjCmgB,EAAE6R,EAAA,GAAEnvB,EAAMmvB,EAAA,GAClB1xB,KAAKoM,QAAQ6L,IAAI4H,EAAItd,EACxB,OAAAzB,GAAAirB,EAAAhrB,EAAAD,EAAA,SAAAirB,EAAA/qB,GAAA,CACkB,OAAnBhB,KAAKmN,OAAOC,OAAOnH,EAAAlC,KAAA,GACb/D,KAAKZ,OAAOgO,OAAM,QACxBpN,KAAKiO,sBACLjO,KAAKZ,OAAO8H,iBACZlH,KAAKZ,OAAOoD,SACZxC,KAAKge,QAAUhe,KAAKgE,cAAcga,QAClChe,KAAK4uB,WAAYlT,EAAAA,EAAAA,IAAc1b,KAAKgE,cAAc4uB,UAAYhhB,EAAAA,GAC9D5R,KAAK2uB,QAASjT,EAAAA,EAAAA,IAAc1b,KAAKgE,cAAc2N,OAASC,EAAAA,GACxD5R,KAAK6uB,UAAY,EACO,IAAmB,EAC3C7uB,KAAKsuB,SAAWtuB,KAAKgE,cAAcsqB,SADQ,EACiBtuB,KAAKgE,cAAcsqB,SADvD,IAExBtuB,KAAKouB,QAAUpuB,KAAKgE,cAAc6uB,OAAOzH,GAAA/qB,EAAAA,EAAAA,GAChBL,KAAKyjB,eAAaxd,EAAAnC,KAAA,GAAAsnB,EAAA7qB,IAAA,YAAA4qB,EAAAC,EAAA5qB,KAAAC,KAAE,CAAFwF,EAAAlC,KAAA,SAAvB,OAAuB6tB,GAAAxoB,EAAAA,EAAAA,GAAA+hB,EAAAzrB,MAAA,GAA7B2xB,EAAMO,EAAA,GAAA3rB,EAAAlC,KAAA,GACC,QADD4tB,EACVN,EAAOjkB,YAAI,IAAAukB,OAAA,EAAXA,EAAA9wB,KAAAwwB,EAAcrxB,MAAK,QAAAiG,EAAAlC,KAAA,iBAAAkC,EAAAlC,KAAA,iBAAAkC,EAAAnC,KAAA,GAAAmC,EAAAqF,GAAArF,EAAA,UAAAmlB,EAAArqB,EAAAkF,EAAAqF,IAAA,eAAArF,EAAAnC,KAAA,GAAAsnB,EAAApqB,IAAAiF,EAAAiT,OAAA,YAAAsS,GAAAnrB,EAAAA,EAAAA,GAEJL,KAAKgf,cAAY/Y,EAAAnC,KAAA,GAAA0nB,EAAAjrB,IAAA,YAAAgrB,EAAAC,EAAAhrB,KAAAC,KAAE,CAAFwF,EAAAlC,KAAA,SAAtB,OAAsBguB,GAAA3oB,EAAAA,EAAAA,GAAAmiB,EAAA7rB,MAAA,GAA5B2xB,EAAMU,EAAA,GAAA9rB,EAAAlC,KAAA,GACC,QADD+tB,EACVT,EAAOjkB,YAAI,IAAA0kB,OAAA,EAAXA,EAAAjxB,KAAAwwB,EAAcrxB,MAAK,QAAAiG,EAAAlC,KAAA,iBAAAkC,EAAAlC,KAAA,iBAAAkC,EAAAnC,KAAA,GAAAmC,EAAAgT,GAAAhT,EAAA,UAAAulB,EAAAzqB,EAAAkF,EAAAgT,IAAA,eAAAhT,EAAAnC,KAAA,GAAA0nB,EAAAxqB,IAAAiF,EAAAiT,OAAA,YAAA+S,GAAA5rB,EAAAA,EAAAA,GAEJL,KAAKoM,SAAOnG,EAAAnC,KAAA,GAAAmoB,EAAA1rB,IAAA,YAAAyrB,EAAAC,EAAAzrB,KAAAC,KAAE,CAAFwF,EAAAlC,KAAA,SAAjB,OAAiBmuB,GAAA9oB,EAAAA,EAAAA,GAAA4iB,EAAAtsB,MAAA,GAAvB6C,EAAM2vB,EAAA,GAAAjsB,EAAAlC,KAAA,GACC,QADDkuB,EACV1vB,EAAO6K,YAAI,IAAA6kB,OAAA,EAAXA,EAAApxB,KAAA0B,GAAe,QAAA0D,EAAAlC,KAAA,iBAAAkC,EAAAlC,KAAA,iBAAAkC,EAAAnC,KAAA,GAAAmC,EAAA6sB,GAAA7sB,EAAA,UAAAgmB,EAAAlrB,EAAAkF,EAAA6sB,IAAA,eAAA7sB,EAAAnC,KAAA,GAAAmoB,EAAAjrB,IAAAiF,EAAAiT,OAAA,YAEwC,OAAjElZ,KAAKuY,QAAQ+G,cAAc,gBAAiB,CAAEzf,UAAWG,OAAQiG,EAAAlC,KAAA,GAC3D/D,KAAKkG,UAAUkH,OAAM,QAC3BpN,KAAKkG,UAAUgI,aAAakkB,GAAA/xB,EAAAA,EAAAA,GACHL,KAAKoM,SAAO,IAArC,IAAAgmB,EAAA7xB,MAAA8xB,EAAAD,EAAA5xB,KAAAC,MAAuC8xB,GAAAnpB,EAAAA,EAAAA,GAAAipB,EAAA3yB,MAAA,GAAzB6C,EAAMgwB,EAAA,GACK,QAArBD,EAAA/vB,EAAOwwB,sBAAc,IAAAT,GAArBA,EAAAzxB,KAAA0B,EACH,OAAAzB,GAAAsxB,EAAArxB,EAAAD,EAAA,SAAAsxB,EAAApxB,GAAA,CACDhB,KAAKuY,QAAQ+G,cAAc,iBAAkB,CAAEzf,UAAWG,OAAQ,yBAAAiG,EAAAb,OAAA,GAAAS,EAAA,sDACrE,yBAAA6E,EAAAgB,MAAA,KAAAnM,UAAA,EAtDA,IAsDA,CAAAR,IAAA,YAAAW,MAAA,eAAAszB,GAAA7vB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAsH,EAAgB+F,GAAI,OAAAtN,EAAAA,EAAAA,KAAAQ,MAAA,SAAAiH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,UACXupB,EAAWttB,MAAO,CAAF6K,EAAA9G,KAAA,eAAA8G,EAAAxE,OAAA,iBAGK,OAA1BrG,KAAKizB,cAAgBviB,EAAK7F,EAAA9G,KAAA,EACpB/D,KAAKmO,UAAS,wBAAAtD,EAAAzF,OAAA,GAAAuF,EAAA,UACvB,gBAAAuoB,GAAA,OAAAF,EAAAtnB,MAAA,KAAAnM,UAAA,EAPA,IAOA,CAAAR,IAAA,QAAAW,MACD,WACI,GAAK4tB,EAAWttB,aAGiBd,IAA7Bc,KAAKywB,sBACL0C,qBAAqBnzB,KAAKywB,4BACnBzwB,KAAKywB,sBAEZzwB,KAAK+uB,SAAT,CAEC,IACoCqE,EADpCC,GAAAhzB,EAAAA,EAAAA,GACwBL,KAAKoM,SAAO,IAArC,IAAAinB,EAAA9yB,MAAA6yB,EAAAC,EAAA7yB,KAAAC,MAAuC,KAAA6yB,EAAzB/wB,GAAyB6G,EAAAA,EAAAA,GAAAgqB,EAAA1zB,MAAA,GAAnB,GACJ,QAAZ4zB,EAAA/wB,EAAO2O,aAAK,IAAAoiB,GAAZA,EAAAzyB,KAAA0B,EACJ,CAAC,OAAAzB,GAAAuyB,EAAAtyB,EAAAD,EAAA,SAAAuyB,EAAAryB,GAAA,CACIhB,KAAKiR,aACNjR,KAAK+uB,SAAU,GAEnB/uB,KAAKuY,QAAQ+G,cAAc,kBAAmB,CAAEzf,UAAWG,MAP3D,CAQJ,GAAC,CAAAjB,IAAA,OAAAW,MACD,SAAK6wB,GACD,GAAKjD,EAAWttB,MAAhB,CAGA,IAAMuzB,EAAcvzB,KAAK+uB,SAAWwB,EACpC,IAAIvwB,KAAK8uB,aAAgB9uB,KAAKgE,cAAcwvB,SAA5C,CAOA,GAHIxzB,KAAK+uB,UACL/uB,KAAK+uB,SAAU,GAEfwE,EAAa,KACwBE,EADxBC,GAAArzB,EAAAA,EAAAA,GACYL,KAAKoM,SAAO,IAArC,IAAAsnB,EAAAnzB,MAAAkzB,EAAAC,EAAAlzB,KAAAC,MAAuC,KAAzB8B,GAAyB6G,EAAAA,EAAAA,GAAAqqB,EAAA/zB,MAAA,GAAnB,GACZ6C,EAAO6O,MACP7O,EAAO6O,MAEf,CAAC,OAAAtQ,GAAA4yB,EAAA3yB,EAAAD,EAAA,SAAA4yB,EAAA1yB,GAAA,CACL,CACAhB,KAAKuY,QAAQ+G,cAAc,gBAAiB,CAAEzf,UAAWG,OACzDA,KAAKyG,KAAgB,OAAX8sB,QAAW,IAAXA,GAAAA,EAZV,MAFIvzB,KAAK8uB,aAAc,CAHvB,CAkBJ,GAAC,CAAA/vB,IAAA,UAAAW,MAAA,eAAAi0B,GAAAxwB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAyK,IAAA,OAAA1K,EAAAA,EAAAA,KAAAQ,MAAA,SAAAoK,GAAA,cAAAA,EAAAlK,KAAAkK,EAAAjK,MAAA,UACSupB,EAAWttB,MAAO,CAAFgO,EAAAjK,KAAA,eAAAiK,EAAA3H,OAAA,iBAGT,OAAZrG,KAAKoF,OAAO4I,EAAA3H,OAAA,SACLrG,KAAK4zB,SAAO,wBAAA5lB,EAAA5I,OAAA,GAAA0I,EAAA,UACtB,yBAAA6lB,EAAAjoB,MAAA,KAAAnM,UAAA,EAPA,IAOA,CAAAR,IAAA,QAAAW,MAAA,eAAAm0B,GAAA1wB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAywB,IAAA,OAAA1wB,EAAAA,EAAAA,KAAAQ,MAAA,SAAAmwB,GAAA,cAAAA,EAAAjwB,KAAAiwB,EAAAhwB,MAAA,UACSupB,EAAWttB,MAAO,CAAF+zB,EAAAhwB,KAAA,eAAAgwB,EAAA1tB,OAAA,iBAKwD,OAF7ErG,KAAKivB,2BAAwB/vB,EAC7Bc,KAAKkvB,SAAW3B,EAAqBvtB,KAAKuY,QAASvY,MACnDA,KAAKgE,cAAgBupB,EAAqBvtB,KAAKuY,QAASvY,KAAMA,KAAKkvB,UAAU6E,EAAA1tB,OAAA,SACtErG,KAAKmO,WAAS,wBAAA4lB,EAAA3uB,OAAA,GAAA0uB,EAAA,UACxB,yBAAAD,EAAAnoB,MAAA,KAAAnM,UAAA,EATA,IASA,CAAAR,IAAA,QAAAW,MAAA,eAAAs0B,GAAA7wB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAA4wB,IAAA,IAAArnB,EAAA,YAAAxJ,EAAAA,EAAAA,KAAAQ,MAAA,SAAAswB,GAAA,cAAAA,EAAApwB,KAAAowB,EAAAnwB,MAAA,UACSupB,EAAWttB,QAASA,KAAK0N,QAAO,CAAAwmB,EAAAnwB,KAAA,eAAAmwB,EAAA7tB,OAAA,wBAAA6tB,EAAAnwB,KAAA,EAG/B/D,KAAKoN,OAAM,OACG,OAApBpN,KAAK0N,SAAU,EAAKwmB,EAAAnwB,KAAA,EACd,IAAIS,SAAQ,SAACC,GACf,IAAMmvB,EAAK,eAAAniB,GAAAtO,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8wB,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAhyB,EAAA,OAAAa,EAAAA,EAAAA,KAAAQ,MAAA,SAAA4wB,GAAA,cAAAA,EAAA1wB,KAAA0wB,EAAAzwB,MAAA,OACV6I,EAAKuiB,gBAAgBsF,eACjB7nB,EAAKsC,cAAc5J,mBAAmBovB,aAAe9nB,EAAKwiB,uBAC1DxiB,EAAKwiB,sBAAsBjoB,QAAQyF,EAAKsC,cAAc5J,SACzD8uB,GAAA/zB,EAAAA,EAAAA,GACwBuM,EAAKR,SAAOooB,EAAA1wB,KAAA,EAAAswB,EAAA7zB,IAAA,WAAA8zB,EAAAD,EAAA5zB,KAAAC,KAAE,CAAF+zB,EAAAzwB,KAAA,SAAjB,OAAiBwwB,GAAAnrB,EAAAA,EAAAA,GAAAirB,EAAA30B,MAAA,GAAvB6C,EAAMgyB,EAAA,GAAAC,EAAAzwB,KAAA,EACE,QADFuwB,EACV/xB,EAAOqxB,aAAK,IAAAU,OAAA,EAAZA,EAAAzzB,KAAA0B,GAAgB,OAAAiyB,EAAAzwB,KAAA,gBAAAywB,EAAAzwB,KAAA,iBAAAywB,EAAA1wB,KAAA,GAAA0wB,EAAAlpB,GAAAkpB,EAAA,SAAAJ,EAAArzB,EAAAyzB,EAAAlpB,IAAA,eAAAkpB,EAAA1wB,KAAA,GAAAswB,EAAApzB,IAAAwzB,EAAAtb,OAAA,YAE1BtM,EAAK2L,QAAQ+G,cAAc,mBAAoB,CAAEzf,UAAW+M,IAC5DA,EAAKwE,OACL3M,IAAU,yBAAA+vB,EAAApvB,OAAA,GAAA+uB,EAAA,yBACb,kBAXU,OAAA1iB,EAAA/F,MAAA,KAAAnM,UAAA,KAYXqN,EAAK+nB,cAAgB7kB,YAAW,WAAW8jB,GAAO,GAAEhnB,EAAK+hB,OAC7D,IAAE,wBAAAuF,EAAA9uB,OAAA,GAAA6uB,EAAA,UACL,yBAAAD,EAAAtoB,MAAA,KAAAnM,UAAA,EAtBA,IAsBA,CAAAR,IAAA,OAAAW,MACD,WACI,GAAK4tB,EAAWttB,OAAUA,KAAK0N,QAA/B,CAGI1N,KAAK20B,gBACLpjB,aAAavR,KAAK20B,sBACX30B,KAAK20B,eAEhB30B,KAAK8uB,aAAc,EACnB9uB,KAAK0N,SAAU,EACf1N,KAAKmvB,gBAAgByF,kBACrB50B,KAAKkR,QACLlR,KAAKkG,UAAUmC,QACfrI,KAAKZ,OAAOgG,OACRpF,KAAKkP,cAAc5J,mBAAmBovB,aAAe10B,KAAKovB,uBAC1DpvB,KAAKovB,sBAAsBza,UAAU3U,KAAKkP,cAAc5J,SAC3D,IACoCuvB,EADpCC,GAAAz0B,EAAAA,EAAAA,GACwBL,KAAKoM,SAAO,IAArC,IAAA0oB,EAAAv0B,MAAAs0B,EAAAC,EAAAt0B,KAAAC,MAAuC,KAAAs0B,EAAzBxyB,GAAyB6G,EAAAA,EAAAA,GAAAyrB,EAAAn1B,MAAA,GAAnB,GACL,QAAXq1B,EAAAxyB,EAAO6C,YAAI,IAAA2vB,GAAXA,EAAAl0B,KAAA0B,EACJ,CAAC,OAAAzB,GAAAg0B,EAAA/zB,EAAAD,EAAA,SAAAg0B,EAAA9zB,GAAA,KACoCg0B,EADpCC,GAAA50B,EAAAA,EAAAA,GACiBL,KAAKoM,QAAQ6jB,QAAM,IAArC,IAAAgF,EAAA10B,MAAAy0B,EAAAC,EAAAz0B,KAAAC,MAAuC,KAA5B1B,EAAGi2B,EAAAt1B,MACVM,KAAKoM,QAAQqL,OAAO1Y,EACxB,CAAC,OAAA+B,GAAAm0B,EAAAl0B,EAAAD,EAAA,SAAAm0B,EAAAj0B,GAAA,CACDhB,KAAKgvB,eAAiBhvB,KAAKkvB,SAC3BlvB,KAAKuY,QAAQ+G,cAAc,mBAAoB,CAAEzf,UAAWG,MArB5D,CAsBJ,GAAC,CAAAjB,IAAA,sBAAAW,MACD,WACIM,KAAKgE,cAAckxB,WAAa,GAChC,IAAMC,EAAcn1B,KAAKgE,cAAcoxB,cAAcp1B,KAAKZ,OAAOuH,KAAKmB,MAAO9H,KAAKmN,OAAOI,WAAYvN,KAAKkvB,UAE1G,OADAlvB,KAAKgE,cAAcqxB,SAASr1B,KAAKizB,eAC7BjzB,KAAKs1B,sBAAwBH,IAGjCn1B,KAAKs1B,oBAAsBH,GACpB,EACX,KAACxH,CAAA,CAraiB,E","sources":["../node_modules/@tsparticles/engine/browser/Core/Canvas.js","../node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","../node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","../node_modules/@tsparticles/engine/browser/Core/Particle.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Point.js","../node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","../node_modules/@tsparticles/engine/browser/Core/Particles.js","../node_modules/@tsparticles/engine/browser/Core/Retina.js","../node_modules/@tsparticles/engine/browser/Core/Container.js"],"sourcesContent":["import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { generatedAttribute } from \"./Utils/Constants.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key], defaultValue = 1;\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    for (const key in style) {\n        const value = style[key];\n        if (!value) {\n            continue;\n        }\n        elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const factorNumerator = 1, opacity = factorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            setStyle(element, originalStyle);\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const radix = 10;\n            setStyle(element, {\n                position: \"fixed\",\n                zIndex: this.container.actualOptions.fullScreen.zIndex.toString(radix),\n                top: \"0\",\n                left: \"0\",\n                width: \"100%\",\n                height: \"100%\",\n            }, true);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill, minimumLength = 0;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius(), minimumSize = 0;\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactorOffset = 1, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, defaultOpacity = 1, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { millisecondsToSeconds, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nconst double = 2;\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                const touchDelay = 500;\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lengthOffset = 1, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect(), defaultCoordinate = 0;\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? defaultCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? defaultCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nconst defaultRetryCount = 0, double = 2, half = 0.5, squareExp = 2;\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                const increment = 1;\n                return this._calcPosition(container, undefined, zIndex, tryCount + increment);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries, minRetries = 0;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const rollFactor = 1, none = 0, backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value), minZ = 0;\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size, defaultRadius = 0;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const [, plugin] of container.plugins) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(\"particleDestroyed\", {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const [, plugin] of container.plugins) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        const decayOffset = 1;\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle, Rectangle } from \"./Ranges.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nconst half = 0.5, double = 2, subdivideCount = 4;\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nimport { errorPrefix } from \"./Utils/Constants.js\";\nconst qTreeCapacity = 4, squareExp = 2, defaultRemoveQuantity = 1;\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize, posOffset = -0.25, sizeFactor = 1.5;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            for (const particle of particles) {\n                this._pool.push(particle);\n            }\n        };\n        this._applyDensity = (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, minLimit = 0, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container, defaultFactor = 1;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle), deleteCount = 1;\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitOptions = this._container.actualOptions.particles.number.limit, limit = group === undefined ? this._limit : this._groupLimits.get(group) ?? this._limit, currentCount = this.count, minLimit = 0;\n        if (limit > minLimit) {\n            if (limitOptions.mode === \"delete\") {\n                const countOffset = 1, minCount = 0, countToRemove = currentCount + countOffset - limit;\n                if (countToRemove > minCount) {\n                    this.removeQuantity(countToRemove);\n                }\n            }\n            else if (limitOptions.mode === \"wait\") {\n                if (currentCount >= limit) {\n                    return;\n                }\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        const minIndex = 0;\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i--, group, override)) {\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        const defaultIndex = 0;\n        this.removeAt(defaultIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups, manualCount = 0;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(\"particleRemoved\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            const lengthOffset = 1;\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nconst defaultRatio = 1, defaultReduceFactor = 1;\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nconst defaultFps = 60;\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver((entries) => this._intersectionManager(entries));\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            }, radius = 1;\n            clickOrTouchHandler(e, pos, radius);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                const lengthOffset = 1;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - lengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, minCoordinate = 0, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, effectDrawer] of this.effectDrawers) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const [, shapeDrawer] of this.shapeDrawers) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this), minIndex = 0;\n        if (idx >= minIndex) {\n            const deleteCount = 1;\n            mainArr.splice(idx, deleteCount);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = requestAnimationFrame((timestamp) => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(this.actualOptions.delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        const defaultFpsLimit = 120, minFpsLimit = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > minFpsLimit ? this.actualOptions.fpsLimit : defaultFpsLimit;\n        this._smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.effectDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, drawer] of this.shapeDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, plugin] of this.plugins) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n"],"names":["setTransformValue","factor","newFactor","key","_factor$key","newValue","undefined","setStyle","canvas","style","important","arguments","length","elementStyle","value","setProperty","Canvas","container","_this","_classCallCheck","this","_applyPostDrawUpdaters","particle","_step","_iterator","_createForOfIteratorHelper","_postDrawUpdaters","s","n","done","_updater$afterDraw","updater","afterDraw","call","err","e","f","_applyPreDrawUpdaters","ctx","radius","zOpacity","colorStyles","transform","_step2","_iterator2","_preDrawUpdaters","_updater$beforeDraw","getColorStyles","_updater$getColorStyl","fill","stroke","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_step3","_iterator3","_resizePlugins","_plugin$resize","plugin","resize","_getPluginParticleColors","fColor","sColor","_step4","_iterator4","_colorPlugins","particleFillColor","rangeColorToHsl","particleStrokeColor","_initCover","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","cover","color","coverRgb","coverColor","wrap","_context","prev","next","actualOptions","backgroundMask","rangeColorToRgb","_objectSpread","a","opacity","_coverColorStyle","getStyleFromRgb","Promise","resolve","reject","image","img","document","createElement","addEventListener","_coverImage","evt","error","src","stop","_initStyle","element","_fullScreen","_originalStyle","deepExtend","_setFullScreenStyle","_resetOriginalStyle","_initTrail","_callee2","trail","trailFill","fillColor","_context2","particles","move","enable","abrupt","_trailFill","_paintBase","baseColor","draw","paintBase","size","_paintImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","callback","_mutationObserver","position","zIndex","fullScreen","toString","top","left","width","height","_generated","_createClass","get","_this2","paint","clear","remove","cb","delta","_particle$getStrokeCo","_this3","spawning","destroyed","getRadius","pfColor","getFillColor","psColor","getStrokeColor","_this$_getPluginParti","_this$_getPluginParti2","_slicedToArray","_ref3","_particle$bubble$opac","_particle$opacity","_particle$strokeOpaci","zIndexOptions","zIndexFactor","zOpacityFactor","Math","pow","opacityRate","bubble","zStrokeOpacity","strokeOpacity","getStyleFromHsl","drawParticle","context","composite","sizeRate","shadow","drawParticlePlugin","drawPlugin","_init","_callee3","_this4","_context3","obs","safeMutationObserver","records","_step5","_iterator5","record","type","attributeName","t0","getLogger","initUpdaters","initPlugins","apply","background","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","_step6","_iterator6","plugins","_plugin$particleFillC","push","_step7","_iterator7","updaters","_ref4","_updater$getColorStyl2","_this5","dataset","generatedAttribute","ariaHidden","offsetHeight","offsetWidth","getContext","retina","init","_this6","pxRatio","pixelRatio","newSize","oldSize","started","setResizeFactor","_this7","_windowResize","_callee4","needsRefresh","_context4","updateActualOptions","setDensity","refresh","manageListener","event","handler","add","addOptions","passive","isBoolean","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","executeOnSingleOrMultiple","mode","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","matches","dark","light","theme","themes","find","name","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","animationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","handleResize","_ref","windowResize","delay","millisecondsToSeconds","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMoveEvent","mouseMove","touchStartEvent","touchStart","touchMoveEvent","touchMove","touchEndEvent","touchEndClick","mouseUpEvent","mouseUp","mouseDownEvent","mouseDown","touchEnd","mouseLeave","touchCancelEvent","touchCancel","_manageListeners","detectType","detectsOn","mouseLeaveEvent","window","mouseOutEvent","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChangeEvent","visibilityChange","mediaMatch","safeMatchMedia","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","resizeEvent","_mouseDown","clicking","downPosition","_mouseTouchClick","inside","handled","mousePosition","clickPositionValid","status","_mouseTouchMove","pos","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","y","clientY","source","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lastTouch","touches","_touchEnd","_i","_touches","Array","from","changedTouches","touch","delete","identifier","_touchEndClick","_i2","_touches2","_touchStart","_i3","_touches3","set","performance","now","Map","InteractionManager","engine","_engine","_interactors","_externalInteractors","_particleInteractors","interactor","isEnabled","interact","_interactor$handleCli","getInteractors","sent","t1","finish","reset","half","fixOutMode","data","isInArray","outMode","checkModes","diameter","coord","maxCoord","setCb","Particle","_calcPosition","_outModes$left","_outModes$right","_outModes$top","_outModes$bottom","tryCount","pluginPos","particlePosition","Vector3d","create","canvasSize","exactPosition","calcExactPositionOrRandomFromSize","outModes","fixHorizontal","fixVertical","right","bottom","_checkOverlap","_calculateVelocity","res","getParticleBaseVelocity","direction","copy","moveOptions","rad","degToRad","getRangeValue","angle","radOffset","offset","range","straight","randomInRange","setRangeValue","random","speed","getRandom","collisionsOptions","collisions","overlapOptions","overlap","retries","Error","concat","errorPrefix","getDistance","_getRollColor","_this$roll$angle","roll","backColor","alter","backFactor","horizontal","vertical","double","backSum","PI","floor","alterHsl","_initPosition","_this$options$move$ce","_this$options$move$ce2","zIndexValue","clamp","zLayers","initialPosition","moveCenter","getPosition","center","getParticleDirectionAngle","outType","Vector","origin","override","_shapeDrawer$particle","unbreakable","inRange","slow","pathGenerator","shapeDrawer","shapeDrawers","shape","particleDestroy","_plugin$particleDestr","particleDestroyed","_updater$particleDest","dispatchEvent","_this$bubble$color","getHslFromAnimation","z","_this$bubble$radius","_this$bubble$color2","strokeColor","id","overrideOptions","group","_effectData$fill","_effectData$close","_shapeData$fill","_shapeData$close","_effectDrawer","_shapeDrawer","_shapeDrawer2","_effectDrawer2","_effectDrawer2$partic","_shapeDrawer3","_shapeDrawer3$particl","effectClose","effectFill","shapeClose","shapeFill","pathRotation","lastPathTime","rotation","misplaced","maxDistance","ignoresResizeRatio","mainOptions","particlesOptions","loadParticlesOptions","effectType","effect","shapeType","reduceDuplicates","itemFromSingleOrMultiple","effectOptions","shapeOptions","_overrideOptions$effe","_overrideOptions$shap","overrideEffectType","load","overrideShapeType","effectData","close","loadEffectData","shapeData","loadShapeData","Interactivity","pathOptions","path","pathDelay","generator","getPathGenerator","addPath","initParticle","initParticleNumericAnimationValue","initialVelocity","velocity","moveDecay","decay","setLastZIndex","sides","effectDrawer","effectDrawers","getEffectDrawer","loadEffect","getShapeDrawer","loadShape","sideCountFunc","getSidesCount","shadowColor","movers","_mover$init","mover","particleInit","_plugin$particleCreat","particleCreated","isInsideCanvas","_step8","_iterator8","_updater$reset","Point","QuadTree","rectangle","capacity","_subdivide","_this$rectangle$posit","_this$rectangle$size","i","fixedIndex","_subs","Rectangle","round","_divided","_points","point","contains","some","sub","insert","check","intersects","p","_toConsumableArray","query","Circle","qTreeRectangle","Particles","_addToPool","_len","_key","_particles","_pool","_applyDensity","manualCount","_options$number$densi","numberOptions","number","density","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","limit","particlesNumber","min","particlesCount","count","filter","t","_limit","_groupLimits","abs","removeQuantity","densityOptions","_container","_pushParticle","initializer","pop","_nextId","canAdd","_array","_zArray","warning","_removeParticle","index","zIdx","indexOf","splice","destroy","_needsSort","_lastZIndex","_interactionManager","_pluginsInitialized","quadTree","manualParticles","addParticle","_this$_groupLimits$ge","limitOptions","currentCount","countToRemove","update","condition","_step4$value","groups","groupOptions","j","_groupOptions$number","particlesInitialization","addManualParticles","_initPlugins","_step5$value","getMovers","getUpdaters","pathGenerators","nb","_redraw","removeAt","quantity","deleted","_resizeFactor","particlesToDelete","Set","_plugin$update","resizeFactor","_step11","_iterator11","_plugin$particleUpdat","particleUpdate","_step12","_iterator12","checkDelete","has","_step9","_iterator9","externalInteract","_step10","_iterator10","_step13","_iterator13","particlesInteract","zArray","sort","b","Retina","reduceFactor","detectRetina","isSsr","devicePixelRatio","ratio","maxSpeed","gravity","sizeAnimationSpeed","animation","moveDistance","distance","props","moveDrift","drift","moveSpeed","guardCheck","loadContainerOptions","Options","sourceOptionsArr","loadOptions","Container","sourceOptions","_intersectionManager","pauseOnOutsideViewport","entry","isIntersecting","_nextFrame","timestamp","_this$_lastFrameTime","_smooth","_lastFrameTime","fpsLimit","initDelta","addLifeTime","alive","Symbol","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","_intersectionObserver","safeIntersectionObserver","el","clickOrTouchHandler","posRetina","queryCircle","touched","touchMoved","max","radiusX","radiusY","_effectDrawer$destroy","_shapeDrawer$destroy","keys","clearPlugins","mainArr","dom","idx","findIndex","force","refreshTime","_drawAnimationFrame","requestAnimationFrame","frame","_export2","_step6$value","_args","export","supported","blob","_x","_plugin$handleClickMo","effects","drawer","shapes","_type","_drawer","availablePlugins","_step10$value","_drawer2$init","_step11$value","_drawer2","_drawer3$init","_step12$value","_drawer3","_plugin$init","_step13$value","_plugin","_iterator14","_step14","_plugin2$particlesSet","_step14$value","_plugin2","getSupportedEffects","getSupportedShapes","getAvailablePlugins","duration","smooth","t2","particlesSetup","_loadTheme","_currentTheme","_x2","cancelAnimationFrame","_step15","_iterator15","_plugin$pause","needsUpdate","autoPlay","_step16","_iterator16","_refresh","start","_reset","_callee5","_context5","_start","_callee7","_context7","_callee6","_iterator17","_step17","_plugin$start","_step17$value","_context6","addListeners","HTMLElement","_delayTimeout","removeListeners","_step18","_iterator18","_plugin$stop","_step19","_iterator19","responsive","newMaxWidth","setResponsive","setTheme","_responsiveMaxWidth"],"sourceRoot":""}