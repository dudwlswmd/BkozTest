{"version":3,"file":"static/js/1142.3868357b.chunk.js","mappings":"6MACMA,EAAY,EAAGC,EAAO,GAAKC,EAASC,KAAKC,GAAKH,EAAMI,EAAS,EAAGC,EAAkB,GACxF,SAASC,EAAcC,EAAWC,EAAUC,EAAQC,EAAMC,GACtD,IAC4BC,EADtBC,EAAQN,EAAUO,UAAUC,SAASF,MAAMH,EAAMC,GAAWK,GAAAC,EAAAA,EAAAA,GAC3CJ,GAAK,IAA5B,IAAAG,EAAAE,MAAAN,EAAAI,EAAAG,KAAAC,MAA8B,KAAnBC,EAAQT,EAAAU,MACXZ,aAAgBa,EAAAA,IAChBC,EAAAA,EAAAA,KAAaC,EAAAA,EAAAA,IAA6BJ,GAAW,CACjDb,SAAAA,EACAC,OAAAA,EACAiB,KAAMxB,KAAAyB,IAAAlB,EAAUV,GAAYE,EAC5B2B,SAAUC,EAAAA,GAAOC,OACjBC,OAAQF,EAAAA,GAAOC,SAGdpB,aAAgBsB,EAAAA,KACrBC,EAAAA,EAAAA,IAAWZ,GAAUa,EAAAA,EAAAA,IAAgB1B,EAAUC,GAEvD,CAAC,OAAA0B,GAAAnB,EAAAoB,EAAAD,EAAA,SAAAnB,EAAAqB,GAAA,CACL,CAgBO,SAASC,EAAU/B,EAAWgC,EAAMC,EAAY7B,IACnD8B,EAAAA,EAAAA,IAAeD,EAAYD,GAAM,SAACG,EAAUC,GAAG,OAhBnD,SAA8BpC,EAAWmC,EAAUC,EAAKC,GACpD,IAAM/B,EAAQgC,SAASC,iBAAiBJ,GACnC7B,EAAMkC,QAGXlC,EAAMmC,SAAQ,SAACC,GACX,IAAMC,EAAOD,EAAME,EAAU5C,EAAU6C,OAAOC,WAAYC,EAAM,CAC5DC,GAAIL,EAAKM,WAAaN,EAAKO,YAAczD,GAAQmD,EACjDO,GAAIR,EAAKS,UAAYT,EAAKU,aAAe5D,GAAQmD,GAClD1C,EAASyC,EAAKO,YAAczD,EAAOmD,EAASU,EAAYxD,EAAkB8C,EAASzC,EAAoB,WAAbiC,EAAImB,KAC3F,IAAIvC,EAAAA,GAAO+B,EAAIC,EAAGD,EAAII,EAAGjD,EAASoD,GAClC,IAAI7B,EAAAA,GAAUkB,EAAKM,WAAaL,EAAUU,EAAWX,EAAKS,UAAYR,EAAUU,EAAWX,EAAKO,YAAcN,EAAUU,EAAYzD,EAAQ8C,EAAKU,aAAeT,EAAUU,EAAYzD,GAC5LwC,EAASU,EAAK7C,EAAQC,EAC1B,GACJ,CAEwDqD,CAAqBxD,EAAWmC,EAAUC,GAAK,SAACW,EAAK7C,EAAQC,GAAI,OAAKJ,EAAcC,EAAW+C,EAAK7C,EAAQC,EAAMC,EAAU,GAAC,GACrL,C,cCjCM6B,EAAa,SACNwB,EAAO,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAChB,SAAAA,EAAYzD,GAAW,OAAA8D,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,KAAA,KACb/D,EACV,CAiCC,OAjCAgE,EAAAA,EAAAA,GAAAP,EAAA,EAAAQ,IAAA,QAAAlD,MACD,WACA,GAAC,CAAAkD,IAAA,OAAAlD,MACD,WACI,IAAMf,EAAYkE,KAAKlE,UAAWmE,EAASnE,EAAUoE,cAAcC,cAAcC,MAAMH,OAClFA,IAGLnE,EAAU6C,OAAO0B,mBAAqBJ,EAAOK,SAAWxE,EAAU6C,OAAOC,WAC7E,GAAC,CAAAmB,IAAA,WAAAlD,MACD,WAAW,IAAA0D,EAAA,KACDzE,EAAYkE,KAAKlE,UAA8C0E,EAAzB1E,EAAUoE,cAAgCC,cAAcK,OAAQC,EAAkB3E,EAAUqE,cAAcO,SAAWC,EAAAA,GAAgBC,EAAeJ,EAAOK,QAAQC,OAAQC,EAAYP,EAAOK,QAAQG,KAAMlD,EAAO0C,EAAOS,MAClQR,GAAmBG,IAAgBM,EAAAA,EAAAA,IAAUnD,EAAYgD,GDkB9D,SAAqBjF,EAAWI,GACnC,IAAMwC,EAAU5C,EAAU6C,OAAOC,WAAYQ,EAAYxD,EAAkB8C,EAASyC,EAAWrF,EAAUqE,cAAciB,MAAMrF,SAAUC,EAASF,EAAU6C,OAAO0B,oBAC5JrE,GAAUA,EAtCqF,IAsC9DmF,GAGtCtF,EAAcC,EAAWqF,EAAUnF,EAAQ,IAAIc,EAAAA,GAAOqE,EAASrC,EAAGqC,EAASlC,EAAGjD,EAASoD,GAAYlD,EACvG,CCvBYmF,CAAYrB,KAAKlE,WAAW,SAACwF,GAAC,OAAKf,EAAKgB,UAAUD,EAAE,IAGpDzD,EAAUmC,KAAKlE,UAAWgC,EAAMC,GAAY,SAACuD,GAAC,OAAKf,EAAKgB,UAAUD,EAAE,GAE5E,GAAC,CAAAvB,IAAA,YAAAlD,MACD,SAAUD,GAAU,IAAA4E,EACV1F,EAAYkE,KAAKlE,UAAW2F,EAAU3F,EAAUoE,cAAekB,EAAQtF,EAAUqE,cAAciB,MAAOZ,GAAiC,QAAxBgB,EAAS,OAAR5E,QAAQ,IAARA,OAAQ,EAARA,EAAUuD,qBAAa,IAAAqB,EAAAA,EAAIC,EAAQtB,eAAeK,OAAQ1C,EAAO0C,EAAOS,MAC9L,QAAWG,EAAMrF,UAAYyE,EAAOK,QAAQC,SAAUI,EAAAA,EAAAA,IAAUnD,EAAYyC,EAAOK,QAAQG,QACvFU,EAAAA,EAAAA,IAAiB3D,EAAYD,EACrC,GAAC,CAAAiC,IAAA,kBAAAlD,MACD,SAAgB4E,GACPA,EAAQxB,SACTwB,EAAQxB,OAAS,IAAI0B,EAAAA,GACxB,QAAAC,EAAAC,UAAAvD,OAHuBwD,EAAO,IAAAC,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAPF,EAAOE,EAAA,GAAAH,UAAAG,GAI/B,IAAK,IAALC,EAAA,EAAAC,EAAqBJ,EAAOG,EAAAC,EAAA5D,OAAA2D,IAAE,CAAzB,IAAME,EAAMD,EAAAD,GACbR,EAAQxB,OAAOmC,KAAW,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQlC,OAChC,CACJ,GAAC,CAAAF,IAAA,QAAAlD,MACD,WACA,KAAC0C,CAAA,CApCe,CAAS8C,EAAAA,G","sources":["../node_modules/@tsparticles/interaction-external-bounce/browser/Utils.js","../node_modules/@tsparticles/interaction-external-bounce/browser/Bouncer.js"],"sourcesContent":["import { Circle, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, rectBounce, } from \"@tsparticles/engine\";\nconst squareExp = 2, half = 0.5, halfPI = Math.PI * half, double = 2, toleranceFactor = 10, minRadius = 0;\nfunction processBounce(container, position, radius, area, enabledCb) {\n    const query = container.particles.quadTree.query(area, enabledCb);\n    for (const particle of query) {\n        if (area instanceof Circle) {\n            circleBounce(circleBounceDataFromParticle(particle), {\n                position,\n                radius,\n                mass: radius ** squareExp * halfPI,\n                velocity: Vector.origin,\n                factor: Vector.origin,\n            });\n        }\n        else if (area instanceof Rectangle) {\n            rectBounce(particle, calculateBounds(position, radius));\n        }\n    }\n}\nfunction singleSelectorBounce(container, selector, div, bounceCb) {\n    const query = document.querySelectorAll(selector);\n    if (!query.length) {\n        return;\n    }\n    query.forEach((item) => {\n        const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n            x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n        }, radius = elem.offsetWidth * half * pxRatio, tolerance = toleranceFactor * pxRatio, area = div.type === \"circle\"\n            ? new Circle(pos.x, pos.y, radius + tolerance)\n            : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * double, elem.offsetHeight * pxRatio + tolerance * double);\n        bounceCb(pos, radius, area);\n    });\n}\nexport function divBounce(container, divs, bounceMode, enabledCb) {\n    divModeExecute(bounceMode, divs, (selector, div) => singleSelectorBounce(container, selector, div, (pos, radius, area) => processBounce(container, pos, radius, area, enabledCb)));\n}\nexport function mouseBounce(container, enabledCb) {\n    const pxRatio = container.retina.pixelRatio, tolerance = toleranceFactor * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n    if (!radius || radius < minRadius || !mousePos) {\n        return;\n    }\n    processBounce(container, mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance), enabledCb);\n}\n","import { ExternalInteractorBase, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { divBounce, mouseBounce } from \"./Utils.js\";\nimport { Bounce } from \"./Options/Classes/Bounce.js\";\nconst bounceMode = \"bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(bounceMode, hoverMode)) {\n            mouseBounce(this.container, (p) => this.isEnabled(p));\n        }\n        else {\n            divBounce(this.container, divs, bounceMode, (p) => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((!!mouse.position && events.onHover.enable && isInArray(bounceMode, events.onHover.mode)) ||\n            isDivModeEnabled(bounceMode, divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n"],"names":["squareExp","half","halfPI","Math","PI","double","toleranceFactor","processBounce","container","position","radius","area","enabledCb","_step","query","particles","quadTree","_iterator","_createForOfIteratorHelper","s","n","done","particle","value","Circle","circleBounce","circleBounceDataFromParticle","mass","pow","velocity","Vector","origin","factor","Rectangle","rectBounce","calculateBounds","err","e","f","divBounce","divs","bounceMode","divModeExecute","selector","div","bounceCb","document","querySelectorAll","length","forEach","item","elem","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","tolerance","type","singleSelectorBounce","Bouncer","_ExternalInteractorBa","_inherits","_super","_createSuper","_classCallCheck","call","_createClass","key","this","bounce","actualOptions","interactivity","modes","bounceModeDistance","distance","_this","events","mouseMoveStatus","status","mouseMoveEvent","hoverEnabled","onHover","enable","hoverMode","mode","onDiv","isInArray","mousePos","mouse","mouseBounce","p","isEnabled","_particle$interactivi","options","isDivModeEnabled","Bounce","_len","arguments","sources","Array","_key","_i","_sources","source","load","ExternalInteractorBase"],"sourceRoot":""}