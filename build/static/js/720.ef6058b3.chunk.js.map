{"version":3,"file":"static/js/720.ef6058b3.chunk.js","mappings":"mKACmBA,EAAc,EAAdA,EAAoB,ECCvC,IACaC,EAAiB,oBAAAA,KAAAC,EAAAA,EAAAA,GAAA,KAAAD,EAAA,CAQzB,OARyBE,EAAAA,EAAAA,GAAAF,EAAA,EAAAG,IAAA,OAAAC,MAC1B,SAAKC,GACD,IAAQC,EAAqBD,EAArBC,SAAUC,EAAWF,EAAXE,QDHnB,SAAqBF,EAAMG,EAAOC,GAC/B,IAAEC,EAAYL,EAAZK,QAAkBC,EAAYF,EAAKG,MAAMC,UAAYJ,EAAKG,MAAME,YAAaC,EAAeN,EAAKG,MAAMC,UAAYJ,EAAKG,MAAME,YAAaE,EAFzI,KAE0KD,EAF9H,GAE6JA,EAAcE,EAAgBC,KAAKC,IAAKC,EAAAA,EAAAA,IAASJ,GACpQ,GAAKN,EAAL,CAGAA,EAAQW,YACRX,EAAQY,UAAUd,EAAMe,EAAGf,EAAMgB,GACjCd,EAAQe,OAAO1B,EAAUA,GACzB,IAAK,IAAI2B,EAAI,EAAGA,EAAIf,EAAWe,IAC3BhB,EAAQiB,OAAOlB,EAAKmB,OAAQ7B,GAC5BW,EAAQY,UAAUb,EAAKmB,OAAQ7B,GAC/BW,EAAQmB,OAAOZ,EAPnB,CASJ,CCTQa,CAAYzB,EAD+B0B,KAAKC,UAAU1B,EAAUC,GAAgBwB,KAAKE,aAAa3B,EAAUC,GAEpH,GAAC,CAAAJ,IAAA,gBAAAC,MACD,SAAcE,GAAU,IAAA4B,EACdC,EAAU7B,EAAS8B,UACzB,OAAOlB,KAAKmB,OAAMC,EAAAA,EAAAA,IAA4B,QAAfJ,EAAQ,OAAPC,QAAO,IAAPA,OAAO,EAAPA,EAASI,aAAK,IAAAL,EAAAA,EARjC,GASjB,KAAClC,CAAA,CARyB,E,8HCDjBwC,EAAc,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAvC,EAAAA,EAAAA,GAAA,KAAAuC,GAAAG,EAAAE,MAAA,KAAAC,UAAA,CAmBtB,OAnBsB5C,EAAAA,EAAAA,GAAAsC,EAAA,EAAArC,IAAA,YAAAC,MACvB,SAAUE,EAAUC,GAChB,MAAO,CACHgB,GAAIhB,EACJiB,EAAGjB,EALC,KAOZ,GAAC,CAAAJ,IAAA,gBAAAC,MACD,WACI,OATsB,CAU1B,GAAC,CAAAD,IAAA,eAAAC,MACD,SAAaE,EAAUC,GAEnB,MAAO,CACHK,MAAO,CACHE,YAAa,EACbD,UAAW,GAEfe,OAlB8B,EAYjBrB,EAQrB,KAACiC,CAAA,CAnBsB,CAASxC,EAAAA,E","sources":["../node_modules/@tsparticles/shape-polygon/browser/Utils.js","../node_modules/@tsparticles/shape-polygon/browser/PolygonDrawerBase.js","../node_modules/@tsparticles/shape-polygon/browser/TriangleDrawer.js"],"sourcesContent":["import { degToRad } from \"@tsparticles/engine\";\nconst piDeg = 180, origin = { x: 0, y: 0 }, sidesOffset = 2;\nexport function drawPolygon(data, start, side) {\n    const { context } = data, sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (piDeg * (decimalSides - sidesOffset)) / decimalSides, interiorAngle = Math.PI - degToRad(interiorAngleDegrees);\n    if (!context) {\n        return;\n    }\n    context.beginPath();\n    context.translate(start.x, start.y);\n    context.moveTo(origin.x, origin.y);\n    for (let i = 0; i < sideCount; i++) {\n        context.lineTo(side.length, origin.y);\n        context.translate(side.length, origin.y);\n        context.rotate(interiorAngle);\n    }\n}\n","import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawPolygon } from \"./Utils.js\";\nconst defaultSides = 5;\nexport class PolygonDrawerBase {\n    draw(data) {\n        const { particle, radius } = data, start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius);\n        drawPolygon(data, start, side);\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? defaultSides));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst yFactor = 1.66, sides = 3, double = 2;\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / yFactor,\n        };\n    }\n    getSidesCount() {\n        return sides;\n    }\n    getSidesData(particle, radius) {\n        const diameter = radius * double;\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: diameter,\n        };\n    }\n}\n"],"names":["origin","PolygonDrawerBase","_classCallCheck","_createClass","key","value","data","particle","radius","start","side","context","sideCount","count","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","Math","PI","degToRad","beginPath","translate","x","y","moveTo","i","lineTo","length","rotate","drawPolygon","this","getCenter","getSidesData","_polygon$sides","polygon","shapeData","round","getRangeValue","sides","TriangleDrawer","_PolygonDrawerBase","_inherits","_super","_createSuper","apply","arguments"],"sourceRoot":""}